
001HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001714  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a4  080018c4  080018c4  000118c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001a68  08001a68  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001a68  08001a68  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a68  08001a68  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a68  08001a68  00011a68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001a6c  08001a6c  00011a6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001a70  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000200ac  2**0
                  CONTENTS
 10 .bss          00000030  200000ac  200000ac  000200ac  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200000dc  200000dc  000200ac  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b57  00000000  00000000  000200d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003d1  00000000  00000000  00020c2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  00021000  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000108  00000000  00000000  00021140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c7a  00000000  00000000  00021248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014f4  00000000  00000000  00023ec2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000093db  00000000  00000000  000253b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e791  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000efc  00000000  00000000  0002e7e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080018ac 	.word	0x080018ac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	080018ac 	.word	0x080018ac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002a0:	f000 fa8c 	bl	80007bc <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <array_fill_numbers+0x50>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	bf00      	nop
 80002d8:	3710      	adds	r7, #16
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	10624dd3 	.word	0x10624dd3

080002e4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b086      	sub	sp, #24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002f0:	6879      	ldr	r1, [r7, #4]
 80002f2:	480e      	ldr	r0, [pc, #56]	; (800032c <display_numbers+0x48>)
 80002f4:	f000 fa36 	bl	8000764 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00b      	b.n	8000316 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	009b      	lsls	r3, r3, #2
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	4413      	add	r3, r2
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	4619      	mov	r1, r3
 800030a:	4809      	ldr	r0, [pc, #36]	; (8000330 <display_numbers+0x4c>)
 800030c:	f000 fa2a 	bl	8000764 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000310:	697b      	ldr	r3, [r7, #20]
 8000312:	3301      	adds	r3, #1
 8000314:	617b      	str	r3, [r7, #20]
 8000316:	697a      	ldr	r2, [r7, #20]
 8000318:	68bb      	ldr	r3, [r7, #8]
 800031a:	429a      	cmp	r2, r3
 800031c:	d3ef      	bcc.n	80002fe <display_numbers+0x1a>
    }

    printf("\n");
 800031e:	200a      	movs	r0, #10
 8000320:	f000 fa38 	bl	8000794 <putchar>
}
 8000324:	bf00      	nop
 8000326:	3718      	adds	r7, #24
 8000328:	46bd      	mov	sp, r7
 800032a:	bd80      	pop	{r7, pc}
 800032c:	080018c4 	.word	0x080018c4
 8000330:	080018c8 	.word	0x080018c8

08000334 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000334:	b480      	push	{r7}
 8000336:	b085      	sub	sp, #20
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000344:	683b      	ldr	r3, [r7, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	68fa      	ldr	r2, [r7, #12]
 8000350:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000352:	4b04      	ldr	r3, [pc, #16]	; (8000364 <swap_numbers+0x30>)
 8000354:	220a      	movs	r2, #10
 8000356:	601a      	str	r2, [r3, #0]
}
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	bc80      	pop	{r7}
 8000360:	4770      	bx	lr
 8000362:	bf00      	nop
 8000364:	20000044 	.word	0x20000044

08000368 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000372:	2300      	movs	r3, #0
 8000374:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000376:	2300      	movs	r3, #0
 8000378:	617b      	str	r3, [r7, #20]
 800037a:	e02f      	b.n	80003dc <bubble_sort+0x74>
    {
        flag=0;
 800037c:	2300      	movs	r3, #0
 800037e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000380:	2300      	movs	r3, #0
 8000382:	613b      	str	r3, [r7, #16]
 8000384:	e01d      	b.n	80003c2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000386:	693b      	ldr	r3, [r7, #16]
 8000388:	009b      	lsls	r3, r3, #2
 800038a:	687a      	ldr	r2, [r7, #4]
 800038c:	4413      	add	r3, r2
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	3301      	adds	r3, #1
 8000394:	009b      	lsls	r3, r3, #2
 8000396:	6879      	ldr	r1, [r7, #4]
 8000398:	440b      	add	r3, r1
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	429a      	cmp	r2, r3
 800039e:	dd0d      	ble.n	80003bc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003a0:	693b      	ldr	r3, [r7, #16]
 80003a2:	009b      	lsls	r3, r3, #2
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	18d0      	adds	r0, r2, r3
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	3301      	adds	r3, #1
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	687a      	ldr	r2, [r7, #4]
 80003b0:	4413      	add	r3, r2
 80003b2:	4619      	mov	r1, r3
 80003b4:	f7ff ffbe 	bl	8000334 <swap_numbers>
                flag=1;
 80003b8:	2301      	movs	r3, #1
 80003ba:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003bc:	693b      	ldr	r3, [r7, #16]
 80003be:	3301      	adds	r3, #1
 80003c0:	613b      	str	r3, [r7, #16]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	683a      	ldr	r2, [r7, #0]
 80003c6:	1ad3      	subs	r3, r2, r3
 80003c8:	1e5a      	subs	r2, r3, #1
 80003ca:	693b      	ldr	r3, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d8da      	bhi.n	8000386 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d008      	beq.n	80003e8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	1e5a      	subs	r2, r3, #1
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	429a      	cmp	r2, r3
 80003e4:	d8ca      	bhi.n	800037c <bubble_sort+0x14>
            break;
    }
}
 80003e6:	e000      	b.n	80003ea <bubble_sort+0x82>
            break;
 80003e8:	bf00      	nop
}
 80003ea:	bf00      	nop
 80003ec:	3718      	adds	r7, #24
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bd80      	pop	{r7, pc}

080003f2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b087      	sub	sp, #28
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
 80003fa:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003fc:	2301      	movs	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	e02c      	b.n	800045c <insertion_sort+0x6a>
     {
         j=i-1;
 8000402:	697b      	ldr	r3, [r7, #20]
 8000404:	3b01      	subs	r3, #1
 8000406:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	009b      	lsls	r3, r3, #2
 800040c:	687a      	ldr	r2, [r7, #4]
 800040e:	4413      	add	r3, r2
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000414:	e00d      	b.n	8000432 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000416:	693b      	ldr	r3, [r7, #16]
 8000418:	009b      	lsls	r3, r3, #2
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	441a      	add	r2, r3
 800041e:	693b      	ldr	r3, [r7, #16]
 8000420:	3301      	adds	r3, #1
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	6879      	ldr	r1, [r7, #4]
 8000426:	440b      	add	r3, r1
 8000428:	6812      	ldr	r2, [r2, #0]
 800042a:	601a      	str	r2, [r3, #0]
             j--;
 800042c:	693b      	ldr	r3, [r7, #16]
 800042e:	3b01      	subs	r3, #1
 8000430:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000432:	693b      	ldr	r3, [r7, #16]
 8000434:	2b00      	cmp	r3, #0
 8000436:	db07      	blt.n	8000448 <insertion_sort+0x56>
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	4413      	add	r3, r2
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	429a      	cmp	r2, r3
 8000446:	dbe6      	blt.n	8000416 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000448:	693b      	ldr	r3, [r7, #16]
 800044a:	3301      	adds	r3, #1
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	4413      	add	r3, r2
 8000452:	68fa      	ldr	r2, [r7, #12]
 8000454:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3301      	adds	r3, #1
 800045a:	617b      	str	r3, [r7, #20]
 800045c:	697b      	ldr	r3, [r7, #20]
 800045e:	683a      	ldr	r2, [r7, #0]
 8000460:	429a      	cmp	r2, r3
 8000462:	d8ce      	bhi.n	8000402 <insertion_sort+0x10>
     }


}
 8000464:	bf00      	nop
 8000466:	bf00      	nop
 8000468:	371c      	adds	r7, #28
 800046a:	46bd      	mov	sp, r7
 800046c:	bc80      	pop	{r7}
 800046e:	4770      	bx	lr

08000470 <main>:



int main()
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b082      	sub	sp, #8
 8000474:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000476:	2311      	movs	r3, #17
 8000478:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800047a:	6879      	ldr	r1, [r7, #4]
 800047c:	4813      	ldr	r0, [pc, #76]	; (80004cc <main+0x5c>)
 800047e:	f7ff ff07 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000482:	4a13      	ldr	r2, [pc, #76]	; (80004d0 <main+0x60>)
 8000484:	6879      	ldr	r1, [r7, #4]
 8000486:	4811      	ldr	r0, [pc, #68]	; (80004cc <main+0x5c>)
 8000488:	f7ff ff2c 	bl	80002e4 <display_numbers>

    bubble_sort(numbers,len);
 800048c:	6879      	ldr	r1, [r7, #4]
 800048e:	480f      	ldr	r0, [pc, #60]	; (80004cc <main+0x5c>)
 8000490:	f7ff ff6a 	bl	8000368 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000494:	4a0f      	ldr	r2, [pc, #60]	; (80004d4 <main+0x64>)
 8000496:	6879      	ldr	r1, [r7, #4]
 8000498:	480c      	ldr	r0, [pc, #48]	; (80004cc <main+0x5c>)
 800049a:	f7ff ff23 	bl	80002e4 <display_numbers>

    array_fill_numbers(numbers,len);
 800049e:	6879      	ldr	r1, [r7, #4]
 80004a0:	480a      	ldr	r0, [pc, #40]	; (80004cc <main+0x5c>)
 80004a2:	f7ff fef5 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004a6:	4a0c      	ldr	r2, [pc, #48]	; (80004d8 <main+0x68>)
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	4808      	ldr	r0, [pc, #32]	; (80004cc <main+0x5c>)
 80004ac:	f7ff ff1a 	bl	80002e4 <display_numbers>

    insertion_sort(numbers,len);
 80004b0:	6879      	ldr	r1, [r7, #4]
 80004b2:	4806      	ldr	r0, [pc, #24]	; (80004cc <main+0x5c>)
 80004b4:	f7ff ff9d 	bl	80003f2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004b8:	4a08      	ldr	r2, [pc, #32]	; (80004dc <main+0x6c>)
 80004ba:	6879      	ldr	r1, [r7, #4]
 80004bc:	4803      	ldr	r0, [pc, #12]	; (80004cc <main+0x5c>)
 80004be:	f7ff ff11 	bl	80002e4 <display_numbers>

    return 0;
 80004c2:	2300      	movs	r3, #0
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	3708      	adds	r7, #8
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bd80      	pop	{r7, pc}
 80004cc:	20000000 	.word	0x20000000
 80004d0:	080018d0 	.word	0x080018d0
 80004d4:	080018e4 	.word	0x080018e4
 80004d8:	080018f8 	.word	0x080018f8
 80004dc:	0800190c 	.word	0x0800190c

080004e0 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80004e0:	b480      	push	{r7}
 80004e2:	b083      	sub	sp, #12
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	4603      	mov	r3, r0
 80004e8:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80004ea:	4b0e      	ldr	r3, [pc, #56]	; (8000524 <ITM_SendChar+0x44>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	4a0d      	ldr	r2, [pc, #52]	; (8000524 <ITM_SendChar+0x44>)
 80004f0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80004f4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80004f6:	4b0c      	ldr	r3, [pc, #48]	; (8000528 <ITM_SendChar+0x48>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a0b      	ldr	r2, [pc, #44]	; (8000528 <ITM_SendChar+0x48>)
 80004fc:	f043 0301 	orr.w	r3, r3, #1
 8000500:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000502:	bf00      	nop
 8000504:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	f003 0301 	and.w	r3, r3, #1
 800050e:	2b00      	cmp	r3, #0
 8000510:	d0f8      	beq.n	8000504 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000512:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000516:	79fb      	ldrb	r3, [r7, #7]
 8000518:	6013      	str	r3, [r2, #0]
}
 800051a:	bf00      	nop
 800051c:	370c      	adds	r7, #12
 800051e:	46bd      	mov	sp, r7
 8000520:	bc80      	pop	{r7}
 8000522:	4770      	bx	lr
 8000524:	e000edfc 	.word	0xe000edfc
 8000528:	e0000e00 	.word	0xe0000e00

0800052c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800052c:	b480      	push	{r7}
 800052e:	af00      	add	r7, sp, #0
  return 1;
 8000530:	2301      	movs	r3, #1
}
 8000532:	4618      	mov	r0, r3
 8000534:	46bd      	mov	sp, r7
 8000536:	bc80      	pop	{r7}
 8000538:	4770      	bx	lr

0800053a <_kill>:

int _kill(int pid, int sig)
{
 800053a:	b580      	push	{r7, lr}
 800053c:	b082      	sub	sp, #8
 800053e:	af00      	add	r7, sp, #0
 8000540:	6078      	str	r0, [r7, #4]
 8000542:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000544:	f000 f8dc 	bl	8000700 <__errno>
 8000548:	4603      	mov	r3, r0
 800054a:	2216      	movs	r2, #22
 800054c:	601a      	str	r2, [r3, #0]
  return -1;
 800054e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000552:	4618      	mov	r0, r3
 8000554:	3708      	adds	r7, #8
 8000556:	46bd      	mov	sp, r7
 8000558:	bd80      	pop	{r7, pc}

0800055a <_exit>:

void _exit (int status)
{
 800055a:	b580      	push	{r7, lr}
 800055c:	b082      	sub	sp, #8
 800055e:	af00      	add	r7, sp, #0
 8000560:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000562:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000566:	6878      	ldr	r0, [r7, #4]
 8000568:	f7ff ffe7 	bl	800053a <_kill>
  while (1) {}    /* Make sure we hang here */
 800056c:	e7fe      	b.n	800056c <_exit+0x12>

0800056e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800056e:	b580      	push	{r7, lr}
 8000570:	b086      	sub	sp, #24
 8000572:	af00      	add	r7, sp, #0
 8000574:	60f8      	str	r0, [r7, #12]
 8000576:	60b9      	str	r1, [r7, #8]
 8000578:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800057a:	2300      	movs	r3, #0
 800057c:	617b      	str	r3, [r7, #20]
 800057e:	e00a      	b.n	8000596 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000580:	f3af 8000 	nop.w
 8000584:	4601      	mov	r1, r0
 8000586:	68bb      	ldr	r3, [r7, #8]
 8000588:	1c5a      	adds	r2, r3, #1
 800058a:	60ba      	str	r2, [r7, #8]
 800058c:	b2ca      	uxtb	r2, r1
 800058e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000590:	697b      	ldr	r3, [r7, #20]
 8000592:	3301      	adds	r3, #1
 8000594:	617b      	str	r3, [r7, #20]
 8000596:	697a      	ldr	r2, [r7, #20]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	429a      	cmp	r2, r3
 800059c:	dbf0      	blt.n	8000580 <_read+0x12>
  }

  return len;
 800059e:	687b      	ldr	r3, [r7, #4]
}
 80005a0:	4618      	mov	r0, r3
 80005a2:	3718      	adds	r7, #24
 80005a4:	46bd      	mov	sp, r7
 80005a6:	bd80      	pop	{r7, pc}

080005a8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b086      	sub	sp, #24
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	60f8      	str	r0, [r7, #12]
 80005b0:	60b9      	str	r1, [r7, #8]
 80005b2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005b4:	2300      	movs	r3, #0
 80005b6:	617b      	str	r3, [r7, #20]
 80005b8:	e009      	b.n	80005ce <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80005ba:	68bb      	ldr	r3, [r7, #8]
 80005bc:	1c5a      	adds	r2, r3, #1
 80005be:	60ba      	str	r2, [r7, #8]
 80005c0:	781b      	ldrb	r3, [r3, #0]
 80005c2:	4618      	mov	r0, r3
 80005c4:	f7ff ff8c 	bl	80004e0 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005c8:	697b      	ldr	r3, [r7, #20]
 80005ca:	3301      	adds	r3, #1
 80005cc:	617b      	str	r3, [r7, #20]
 80005ce:	697a      	ldr	r2, [r7, #20]
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	429a      	cmp	r2, r3
 80005d4:	dbf1      	blt.n	80005ba <_write+0x12>
  }
  return len;
 80005d6:	687b      	ldr	r3, [r7, #4]
}
 80005d8:	4618      	mov	r0, r3
 80005da:	3718      	adds	r7, #24
 80005dc:	46bd      	mov	sp, r7
 80005de:	bd80      	pop	{r7, pc}

080005e0 <_close>:

int _close(int file)
{
 80005e0:	b480      	push	{r7}
 80005e2:	b083      	sub	sp, #12
 80005e4:	af00      	add	r7, sp, #0
 80005e6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80005e8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80005ec:	4618      	mov	r0, r3
 80005ee:	370c      	adds	r7, #12
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bc80      	pop	{r7}
 80005f4:	4770      	bx	lr

080005f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005f6:	b480      	push	{r7}
 80005f8:	b083      	sub	sp, #12
 80005fa:	af00      	add	r7, sp, #0
 80005fc:	6078      	str	r0, [r7, #4]
 80005fe:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000600:	683b      	ldr	r3, [r7, #0]
 8000602:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000606:	605a      	str	r2, [r3, #4]
  return 0;
 8000608:	2300      	movs	r3, #0
}
 800060a:	4618      	mov	r0, r3
 800060c:	370c      	adds	r7, #12
 800060e:	46bd      	mov	sp, r7
 8000610:	bc80      	pop	{r7}
 8000612:	4770      	bx	lr

08000614 <_isatty>:

int _isatty(int file)
{
 8000614:	b480      	push	{r7}
 8000616:	b083      	sub	sp, #12
 8000618:	af00      	add	r7, sp, #0
 800061a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800061c:	2301      	movs	r3, #1
}
 800061e:	4618      	mov	r0, r3
 8000620:	370c      	adds	r7, #12
 8000622:	46bd      	mov	sp, r7
 8000624:	bc80      	pop	{r7}
 8000626:	4770      	bx	lr

08000628 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000628:	b480      	push	{r7}
 800062a:	b085      	sub	sp, #20
 800062c:	af00      	add	r7, sp, #0
 800062e:	60f8      	str	r0, [r7, #12]
 8000630:	60b9      	str	r1, [r7, #8]
 8000632:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000634:	2300      	movs	r3, #0
}
 8000636:	4618      	mov	r0, r3
 8000638:	3714      	adds	r7, #20
 800063a:	46bd      	mov	sp, r7
 800063c:	bc80      	pop	{r7}
 800063e:	4770      	bx	lr

08000640 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000640:	b580      	push	{r7, lr}
 8000642:	b086      	sub	sp, #24
 8000644:	af00      	add	r7, sp, #0
 8000646:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000648:	4a14      	ldr	r2, [pc, #80]	; (800069c <_sbrk+0x5c>)
 800064a:	4b15      	ldr	r3, [pc, #84]	; (80006a0 <_sbrk+0x60>)
 800064c:	1ad3      	subs	r3, r2, r3
 800064e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000650:	697b      	ldr	r3, [r7, #20]
 8000652:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000654:	4b13      	ldr	r3, [pc, #76]	; (80006a4 <_sbrk+0x64>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	2b00      	cmp	r3, #0
 800065a:	d102      	bne.n	8000662 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800065c:	4b11      	ldr	r3, [pc, #68]	; (80006a4 <_sbrk+0x64>)
 800065e:	4a12      	ldr	r2, [pc, #72]	; (80006a8 <_sbrk+0x68>)
 8000660:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000662:	4b10      	ldr	r3, [pc, #64]	; (80006a4 <_sbrk+0x64>)
 8000664:	681a      	ldr	r2, [r3, #0]
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4413      	add	r3, r2
 800066a:	693a      	ldr	r2, [r7, #16]
 800066c:	429a      	cmp	r2, r3
 800066e:	d207      	bcs.n	8000680 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000670:	f000 f846 	bl	8000700 <__errno>
 8000674:	4603      	mov	r3, r0
 8000676:	220c      	movs	r2, #12
 8000678:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800067a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800067e:	e009      	b.n	8000694 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000680:	4b08      	ldr	r3, [pc, #32]	; (80006a4 <_sbrk+0x64>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000686:	4b07      	ldr	r3, [pc, #28]	; (80006a4 <_sbrk+0x64>)
 8000688:	681a      	ldr	r2, [r3, #0]
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	4413      	add	r3, r2
 800068e:	4a05      	ldr	r2, [pc, #20]	; (80006a4 <_sbrk+0x64>)
 8000690:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000692:	68fb      	ldr	r3, [r7, #12]
}
 8000694:	4618      	mov	r0, r3
 8000696:	3718      	adds	r7, #24
 8000698:	46bd      	mov	sp, r7
 800069a:	bd80      	pop	{r7, pc}
 800069c:	20020000 	.word	0x20020000
 80006a0:	00000400 	.word	0x00000400
 80006a4:	200000c8 	.word	0x200000c8
 80006a8:	200000e0 	.word	0x200000e0

080006ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ac:	480d      	ldr	r0, [pc, #52]	; (80006e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b4:	480c      	ldr	r0, [pc, #48]	; (80006e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80006b6:	490d      	ldr	r1, [pc, #52]	; (80006ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b8:	4a0d      	ldr	r2, [pc, #52]	; (80006f0 <LoopForever+0xe>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006bc:	e002      	b.n	80006c4 <LoopCopyDataInit>

080006be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006c2:	3304      	adds	r3, #4

080006c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006c8:	d3f9      	bcc.n	80006be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ca:	4a0a      	ldr	r2, [pc, #40]	; (80006f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006cc:	4c0a      	ldr	r4, [pc, #40]	; (80006f8 <LoopForever+0x16>)
  movs r3, #0
 80006ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006d0:	e001      	b.n	80006d6 <LoopFillZerobss>

080006d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d4:	3204      	adds	r2, #4

080006d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d8:	d3fb      	bcc.n	80006d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006da:	f000 f817 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006de:	f7ff fec7 	bl	8000470 <main>

080006e2 <LoopForever>:

LoopForever:
  b LoopForever
 80006e2:	e7fe      	b.n	80006e2 <LoopForever>
  ldr   r0, =_estack
 80006e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006ec:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006f0:	08001a70 	.word	0x08001a70
  ldr r2, =_sbss
 80006f4:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006f8:	200000dc 	.word	0x200000dc

080006fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006fc:	e7fe      	b.n	80006fc <ADC_IRQHandler>
	...

08000700 <__errno>:
 8000700:	4b01      	ldr	r3, [pc, #4]	; (8000708 <__errno+0x8>)
 8000702:	6818      	ldr	r0, [r3, #0]
 8000704:	4770      	bx	lr
 8000706:	bf00      	nop
 8000708:	20000048 	.word	0x20000048

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f001 f8c4 	bl	80018ac <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	08001a68 	.word	0x08001a68
 8000748:	08001a68 	.word	0x08001a68
 800074c:	08001a68 	.word	0x08001a68
 8000750:	08001a6c 	.word	0x08001a6c

08000754 <memset>:
 8000754:	4402      	add	r2, r0
 8000756:	4603      	mov	r3, r0
 8000758:	4293      	cmp	r3, r2
 800075a:	d100      	bne.n	800075e <memset+0xa>
 800075c:	4770      	bx	lr
 800075e:	f803 1b01 	strb.w	r1, [r3], #1
 8000762:	e7f9      	b.n	8000758 <memset+0x4>

08000764 <iprintf>:
 8000764:	b40f      	push	{r0, r1, r2, r3}
 8000766:	4b0a      	ldr	r3, [pc, #40]	; (8000790 <iprintf+0x2c>)
 8000768:	b513      	push	{r0, r1, r4, lr}
 800076a:	681c      	ldr	r4, [r3, #0]
 800076c:	b124      	cbz	r4, 8000778 <iprintf+0x14>
 800076e:	69a3      	ldr	r3, [r4, #24]
 8000770:	b913      	cbnz	r3, 8000778 <iprintf+0x14>
 8000772:	4620      	mov	r0, r4
 8000774:	f000 f8d6 	bl	8000924 <__sinit>
 8000778:	ab05      	add	r3, sp, #20
 800077a:	9a04      	ldr	r2, [sp, #16]
 800077c:	68a1      	ldr	r1, [r4, #8]
 800077e:	9301      	str	r3, [sp, #4]
 8000780:	4620      	mov	r0, r4
 8000782:	f000 fa8f 	bl	8000ca4 <_vfiprintf_r>
 8000786:	b002      	add	sp, #8
 8000788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078c:	b004      	add	sp, #16
 800078e:	4770      	bx	lr
 8000790:	20000048 	.word	0x20000048

08000794 <putchar>:
 8000794:	b538      	push	{r3, r4, r5, lr}
 8000796:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <putchar+0x24>)
 8000798:	681c      	ldr	r4, [r3, #0]
 800079a:	4605      	mov	r5, r0
 800079c:	b124      	cbz	r4, 80007a8 <putchar+0x14>
 800079e:	69a3      	ldr	r3, [r4, #24]
 80007a0:	b913      	cbnz	r3, 80007a8 <putchar+0x14>
 80007a2:	4620      	mov	r0, r4
 80007a4:	f000 f8be 	bl	8000924 <__sinit>
 80007a8:	68a2      	ldr	r2, [r4, #8]
 80007aa:	4629      	mov	r1, r5
 80007ac:	4620      	mov	r0, r4
 80007ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007b2:	f000 bd3b 	b.w	800122c <_putc_r>
 80007b6:	bf00      	nop
 80007b8:	20000048 	.word	0x20000048

080007bc <rand>:
 80007bc:	4b16      	ldr	r3, [pc, #88]	; (8000818 <rand+0x5c>)
 80007be:	b510      	push	{r4, lr}
 80007c0:	681c      	ldr	r4, [r3, #0]
 80007c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80007c4:	b9b3      	cbnz	r3, 80007f4 <rand+0x38>
 80007c6:	2018      	movs	r0, #24
 80007c8:	f000 f95e 	bl	8000a88 <malloc>
 80007cc:	4602      	mov	r2, r0
 80007ce:	63a0      	str	r0, [r4, #56]	; 0x38
 80007d0:	b920      	cbnz	r0, 80007dc <rand+0x20>
 80007d2:	4b12      	ldr	r3, [pc, #72]	; (800081c <rand+0x60>)
 80007d4:	4812      	ldr	r0, [pc, #72]	; (8000820 <rand+0x64>)
 80007d6:	214e      	movs	r1, #78	; 0x4e
 80007d8:	f000 f82e 	bl	8000838 <__assert_func>
 80007dc:	4911      	ldr	r1, [pc, #68]	; (8000824 <rand+0x68>)
 80007de:	4b12      	ldr	r3, [pc, #72]	; (8000828 <rand+0x6c>)
 80007e0:	e9c0 1300 	strd	r1, r3, [r0]
 80007e4:	4b11      	ldr	r3, [pc, #68]	; (800082c <rand+0x70>)
 80007e6:	6083      	str	r3, [r0, #8]
 80007e8:	230b      	movs	r3, #11
 80007ea:	8183      	strh	r3, [r0, #12]
 80007ec:	2100      	movs	r1, #0
 80007ee:	2001      	movs	r0, #1
 80007f0:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80007f4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 80007f6:	4a0e      	ldr	r2, [pc, #56]	; (8000830 <rand+0x74>)
 80007f8:	6920      	ldr	r0, [r4, #16]
 80007fa:	6963      	ldr	r3, [r4, #20]
 80007fc:	490d      	ldr	r1, [pc, #52]	; (8000834 <rand+0x78>)
 80007fe:	4342      	muls	r2, r0
 8000800:	fb01 2203 	mla	r2, r1, r3, r2
 8000804:	fba0 0101 	umull	r0, r1, r0, r1
 8000808:	1c43      	adds	r3, r0, #1
 800080a:	eb42 0001 	adc.w	r0, r2, r1
 800080e:	e9c4 3004 	strd	r3, r0, [r4, #16]
 8000812:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8000816:	bd10      	pop	{r4, pc}
 8000818:	20000048 	.word	0x20000048
 800081c:	08001924 	.word	0x08001924
 8000820:	0800193b 	.word	0x0800193b
 8000824:	abcd330e 	.word	0xabcd330e
 8000828:	e66d1234 	.word	0xe66d1234
 800082c:	0005deec 	.word	0x0005deec
 8000830:	5851f42d 	.word	0x5851f42d
 8000834:	4c957f2d 	.word	0x4c957f2d

08000838 <__assert_func>:
 8000838:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800083a:	4614      	mov	r4, r2
 800083c:	461a      	mov	r2, r3
 800083e:	4b09      	ldr	r3, [pc, #36]	; (8000864 <__assert_func+0x2c>)
 8000840:	681b      	ldr	r3, [r3, #0]
 8000842:	4605      	mov	r5, r0
 8000844:	68d8      	ldr	r0, [r3, #12]
 8000846:	b14c      	cbz	r4, 800085c <__assert_func+0x24>
 8000848:	4b07      	ldr	r3, [pc, #28]	; (8000868 <__assert_func+0x30>)
 800084a:	9100      	str	r1, [sp, #0]
 800084c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000850:	4906      	ldr	r1, [pc, #24]	; (800086c <__assert_func+0x34>)
 8000852:	462b      	mov	r3, r5
 8000854:	f000 f8e4 	bl	8000a20 <fiprintf>
 8000858:	f000 fe56 	bl	8001508 <abort>
 800085c:	4b04      	ldr	r3, [pc, #16]	; (8000870 <__assert_func+0x38>)
 800085e:	461c      	mov	r4, r3
 8000860:	e7f3      	b.n	800084a <__assert_func+0x12>
 8000862:	bf00      	nop
 8000864:	20000048 	.word	0x20000048
 8000868:	08001996 	.word	0x08001996
 800086c:	080019a3 	.word	0x080019a3
 8000870:	080019d1 	.word	0x080019d1

08000874 <std>:
 8000874:	2300      	movs	r3, #0
 8000876:	b510      	push	{r4, lr}
 8000878:	4604      	mov	r4, r0
 800087a:	e9c0 3300 	strd	r3, r3, [r0]
 800087e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000882:	6083      	str	r3, [r0, #8]
 8000884:	8181      	strh	r1, [r0, #12]
 8000886:	6643      	str	r3, [r0, #100]	; 0x64
 8000888:	81c2      	strh	r2, [r0, #14]
 800088a:	6183      	str	r3, [r0, #24]
 800088c:	4619      	mov	r1, r3
 800088e:	2208      	movs	r2, #8
 8000890:	305c      	adds	r0, #92	; 0x5c
 8000892:	f7ff ff5f 	bl	8000754 <memset>
 8000896:	4b05      	ldr	r3, [pc, #20]	; (80008ac <std+0x38>)
 8000898:	6263      	str	r3, [r4, #36]	; 0x24
 800089a:	4b05      	ldr	r3, [pc, #20]	; (80008b0 <std+0x3c>)
 800089c:	62a3      	str	r3, [r4, #40]	; 0x28
 800089e:	4b05      	ldr	r3, [pc, #20]	; (80008b4 <std+0x40>)
 80008a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008a2:	4b05      	ldr	r3, [pc, #20]	; (80008b8 <std+0x44>)
 80008a4:	6224      	str	r4, [r4, #32]
 80008a6:	6323      	str	r3, [r4, #48]	; 0x30
 80008a8:	bd10      	pop	{r4, pc}
 80008aa:	bf00      	nop
 80008ac:	080012dd 	.word	0x080012dd
 80008b0:	080012ff 	.word	0x080012ff
 80008b4:	08001337 	.word	0x08001337
 80008b8:	0800135b 	.word	0x0800135b

080008bc <_cleanup_r>:
 80008bc:	4901      	ldr	r1, [pc, #4]	; (80008c4 <_cleanup_r+0x8>)
 80008be:	f000 b8c1 	b.w	8000a44 <_fwalk_reent>
 80008c2:	bf00      	nop
 80008c4:	0800163d 	.word	0x0800163d

080008c8 <__sfmoreglue>:
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	2268      	movs	r2, #104	; 0x68
 80008cc:	1e4d      	subs	r5, r1, #1
 80008ce:	4355      	muls	r5, r2
 80008d0:	460e      	mov	r6, r1
 80008d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008d6:	f000 f949 	bl	8000b6c <_malloc_r>
 80008da:	4604      	mov	r4, r0
 80008dc:	b140      	cbz	r0, 80008f0 <__sfmoreglue+0x28>
 80008de:	2100      	movs	r1, #0
 80008e0:	e9c0 1600 	strd	r1, r6, [r0]
 80008e4:	300c      	adds	r0, #12
 80008e6:	60a0      	str	r0, [r4, #8]
 80008e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008ec:	f7ff ff32 	bl	8000754 <memset>
 80008f0:	4620      	mov	r0, r4
 80008f2:	bd70      	pop	{r4, r5, r6, pc}

080008f4 <__sfp_lock_acquire>:
 80008f4:	4801      	ldr	r0, [pc, #4]	; (80008fc <__sfp_lock_acquire+0x8>)
 80008f6:	f000 b8c5 	b.w	8000a84 <__retarget_lock_acquire_recursive>
 80008fa:	bf00      	nop
 80008fc:	200000cd 	.word	0x200000cd

08000900 <__sfp_lock_release>:
 8000900:	4801      	ldr	r0, [pc, #4]	; (8000908 <__sfp_lock_release+0x8>)
 8000902:	f000 b8c0 	b.w	8000a86 <__retarget_lock_release_recursive>
 8000906:	bf00      	nop
 8000908:	200000cd 	.word	0x200000cd

0800090c <__sinit_lock_acquire>:
 800090c:	4801      	ldr	r0, [pc, #4]	; (8000914 <__sinit_lock_acquire+0x8>)
 800090e:	f000 b8b9 	b.w	8000a84 <__retarget_lock_acquire_recursive>
 8000912:	bf00      	nop
 8000914:	200000ce 	.word	0x200000ce

08000918 <__sinit_lock_release>:
 8000918:	4801      	ldr	r0, [pc, #4]	; (8000920 <__sinit_lock_release+0x8>)
 800091a:	f000 b8b4 	b.w	8000a86 <__retarget_lock_release_recursive>
 800091e:	bf00      	nop
 8000920:	200000ce 	.word	0x200000ce

08000924 <__sinit>:
 8000924:	b510      	push	{r4, lr}
 8000926:	4604      	mov	r4, r0
 8000928:	f7ff fff0 	bl	800090c <__sinit_lock_acquire>
 800092c:	69a3      	ldr	r3, [r4, #24]
 800092e:	b11b      	cbz	r3, 8000938 <__sinit+0x14>
 8000930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000934:	f7ff bff0 	b.w	8000918 <__sinit_lock_release>
 8000938:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800093c:	6523      	str	r3, [r4, #80]	; 0x50
 800093e:	4b13      	ldr	r3, [pc, #76]	; (800098c <__sinit+0x68>)
 8000940:	4a13      	ldr	r2, [pc, #76]	; (8000990 <__sinit+0x6c>)
 8000942:	681b      	ldr	r3, [r3, #0]
 8000944:	62a2      	str	r2, [r4, #40]	; 0x28
 8000946:	42a3      	cmp	r3, r4
 8000948:	bf04      	itt	eq
 800094a:	2301      	moveq	r3, #1
 800094c:	61a3      	streq	r3, [r4, #24]
 800094e:	4620      	mov	r0, r4
 8000950:	f000 f820 	bl	8000994 <__sfp>
 8000954:	6060      	str	r0, [r4, #4]
 8000956:	4620      	mov	r0, r4
 8000958:	f000 f81c 	bl	8000994 <__sfp>
 800095c:	60a0      	str	r0, [r4, #8]
 800095e:	4620      	mov	r0, r4
 8000960:	f000 f818 	bl	8000994 <__sfp>
 8000964:	2200      	movs	r2, #0
 8000966:	60e0      	str	r0, [r4, #12]
 8000968:	2104      	movs	r1, #4
 800096a:	6860      	ldr	r0, [r4, #4]
 800096c:	f7ff ff82 	bl	8000874 <std>
 8000970:	68a0      	ldr	r0, [r4, #8]
 8000972:	2201      	movs	r2, #1
 8000974:	2109      	movs	r1, #9
 8000976:	f7ff ff7d 	bl	8000874 <std>
 800097a:	68e0      	ldr	r0, [r4, #12]
 800097c:	2202      	movs	r2, #2
 800097e:	2112      	movs	r1, #18
 8000980:	f7ff ff78 	bl	8000874 <std>
 8000984:	2301      	movs	r3, #1
 8000986:	61a3      	str	r3, [r4, #24]
 8000988:	e7d2      	b.n	8000930 <__sinit+0xc>
 800098a:	bf00      	nop
 800098c:	08001920 	.word	0x08001920
 8000990:	080008bd 	.word	0x080008bd

08000994 <__sfp>:
 8000994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000996:	4607      	mov	r7, r0
 8000998:	f7ff ffac 	bl	80008f4 <__sfp_lock_acquire>
 800099c:	4b1e      	ldr	r3, [pc, #120]	; (8000a18 <__sfp+0x84>)
 800099e:	681e      	ldr	r6, [r3, #0]
 80009a0:	69b3      	ldr	r3, [r6, #24]
 80009a2:	b913      	cbnz	r3, 80009aa <__sfp+0x16>
 80009a4:	4630      	mov	r0, r6
 80009a6:	f7ff ffbd 	bl	8000924 <__sinit>
 80009aa:	3648      	adds	r6, #72	; 0x48
 80009ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009b0:	3b01      	subs	r3, #1
 80009b2:	d503      	bpl.n	80009bc <__sfp+0x28>
 80009b4:	6833      	ldr	r3, [r6, #0]
 80009b6:	b30b      	cbz	r3, 80009fc <__sfp+0x68>
 80009b8:	6836      	ldr	r6, [r6, #0]
 80009ba:	e7f7      	b.n	80009ac <__sfp+0x18>
 80009bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009c0:	b9d5      	cbnz	r5, 80009f8 <__sfp+0x64>
 80009c2:	4b16      	ldr	r3, [pc, #88]	; (8000a1c <__sfp+0x88>)
 80009c4:	60e3      	str	r3, [r4, #12]
 80009c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009ca:	6665      	str	r5, [r4, #100]	; 0x64
 80009cc:	f000 f859 	bl	8000a82 <__retarget_lock_init_recursive>
 80009d0:	f7ff ff96 	bl	8000900 <__sfp_lock_release>
 80009d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009dc:	6025      	str	r5, [r4, #0]
 80009de:	61a5      	str	r5, [r4, #24]
 80009e0:	2208      	movs	r2, #8
 80009e2:	4629      	mov	r1, r5
 80009e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009e8:	f7ff feb4 	bl	8000754 <memset>
 80009ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009f4:	4620      	mov	r0, r4
 80009f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009f8:	3468      	adds	r4, #104	; 0x68
 80009fa:	e7d9      	b.n	80009b0 <__sfp+0x1c>
 80009fc:	2104      	movs	r1, #4
 80009fe:	4638      	mov	r0, r7
 8000a00:	f7ff ff62 	bl	80008c8 <__sfmoreglue>
 8000a04:	4604      	mov	r4, r0
 8000a06:	6030      	str	r0, [r6, #0]
 8000a08:	2800      	cmp	r0, #0
 8000a0a:	d1d5      	bne.n	80009b8 <__sfp+0x24>
 8000a0c:	f7ff ff78 	bl	8000900 <__sfp_lock_release>
 8000a10:	230c      	movs	r3, #12
 8000a12:	603b      	str	r3, [r7, #0]
 8000a14:	e7ee      	b.n	80009f4 <__sfp+0x60>
 8000a16:	bf00      	nop
 8000a18:	08001920 	.word	0x08001920
 8000a1c:	ffff0001 	.word	0xffff0001

08000a20 <fiprintf>:
 8000a20:	b40e      	push	{r1, r2, r3}
 8000a22:	b503      	push	{r0, r1, lr}
 8000a24:	4601      	mov	r1, r0
 8000a26:	ab03      	add	r3, sp, #12
 8000a28:	4805      	ldr	r0, [pc, #20]	; (8000a40 <fiprintf+0x20>)
 8000a2a:	f853 2b04 	ldr.w	r2, [r3], #4
 8000a2e:	6800      	ldr	r0, [r0, #0]
 8000a30:	9301      	str	r3, [sp, #4]
 8000a32:	f000 f937 	bl	8000ca4 <_vfiprintf_r>
 8000a36:	b002      	add	sp, #8
 8000a38:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a3c:	b003      	add	sp, #12
 8000a3e:	4770      	bx	lr
 8000a40:	20000048 	.word	0x20000048

08000a44 <_fwalk_reent>:
 8000a44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a48:	4606      	mov	r6, r0
 8000a4a:	4688      	mov	r8, r1
 8000a4c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a50:	2700      	movs	r7, #0
 8000a52:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a56:	f1b9 0901 	subs.w	r9, r9, #1
 8000a5a:	d505      	bpl.n	8000a68 <_fwalk_reent+0x24>
 8000a5c:	6824      	ldr	r4, [r4, #0]
 8000a5e:	2c00      	cmp	r4, #0
 8000a60:	d1f7      	bne.n	8000a52 <_fwalk_reent+0xe>
 8000a62:	4638      	mov	r0, r7
 8000a64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a68:	89ab      	ldrh	r3, [r5, #12]
 8000a6a:	2b01      	cmp	r3, #1
 8000a6c:	d907      	bls.n	8000a7e <_fwalk_reent+0x3a>
 8000a6e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a72:	3301      	adds	r3, #1
 8000a74:	d003      	beq.n	8000a7e <_fwalk_reent+0x3a>
 8000a76:	4629      	mov	r1, r5
 8000a78:	4630      	mov	r0, r6
 8000a7a:	47c0      	blx	r8
 8000a7c:	4307      	orrs	r7, r0
 8000a7e:	3568      	adds	r5, #104	; 0x68
 8000a80:	e7e9      	b.n	8000a56 <_fwalk_reent+0x12>

08000a82 <__retarget_lock_init_recursive>:
 8000a82:	4770      	bx	lr

08000a84 <__retarget_lock_acquire_recursive>:
 8000a84:	4770      	bx	lr

08000a86 <__retarget_lock_release_recursive>:
 8000a86:	4770      	bx	lr

08000a88 <malloc>:
 8000a88:	4b02      	ldr	r3, [pc, #8]	; (8000a94 <malloc+0xc>)
 8000a8a:	4601      	mov	r1, r0
 8000a8c:	6818      	ldr	r0, [r3, #0]
 8000a8e:	f000 b86d 	b.w	8000b6c <_malloc_r>
 8000a92:	bf00      	nop
 8000a94:	20000048 	.word	0x20000048

08000a98 <_free_r>:
 8000a98:	b538      	push	{r3, r4, r5, lr}
 8000a9a:	4605      	mov	r5, r0
 8000a9c:	2900      	cmp	r1, #0
 8000a9e:	d041      	beq.n	8000b24 <_free_r+0x8c>
 8000aa0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000aa4:	1f0c      	subs	r4, r1, #4
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	bfb8      	it	lt
 8000aaa:	18e4      	addlt	r4, r4, r3
 8000aac:	f000 fe7a 	bl	80017a4 <__malloc_lock>
 8000ab0:	4a1d      	ldr	r2, [pc, #116]	; (8000b28 <_free_r+0x90>)
 8000ab2:	6813      	ldr	r3, [r2, #0]
 8000ab4:	b933      	cbnz	r3, 8000ac4 <_free_r+0x2c>
 8000ab6:	6063      	str	r3, [r4, #4]
 8000ab8:	6014      	str	r4, [r2, #0]
 8000aba:	4628      	mov	r0, r5
 8000abc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ac0:	f000 be76 	b.w	80017b0 <__malloc_unlock>
 8000ac4:	42a3      	cmp	r3, r4
 8000ac6:	d908      	bls.n	8000ada <_free_r+0x42>
 8000ac8:	6820      	ldr	r0, [r4, #0]
 8000aca:	1821      	adds	r1, r4, r0
 8000acc:	428b      	cmp	r3, r1
 8000ace:	bf01      	itttt	eq
 8000ad0:	6819      	ldreq	r1, [r3, #0]
 8000ad2:	685b      	ldreq	r3, [r3, #4]
 8000ad4:	1809      	addeq	r1, r1, r0
 8000ad6:	6021      	streq	r1, [r4, #0]
 8000ad8:	e7ed      	b.n	8000ab6 <_free_r+0x1e>
 8000ada:	461a      	mov	r2, r3
 8000adc:	685b      	ldr	r3, [r3, #4]
 8000ade:	b10b      	cbz	r3, 8000ae4 <_free_r+0x4c>
 8000ae0:	42a3      	cmp	r3, r4
 8000ae2:	d9fa      	bls.n	8000ada <_free_r+0x42>
 8000ae4:	6811      	ldr	r1, [r2, #0]
 8000ae6:	1850      	adds	r0, r2, r1
 8000ae8:	42a0      	cmp	r0, r4
 8000aea:	d10b      	bne.n	8000b04 <_free_r+0x6c>
 8000aec:	6820      	ldr	r0, [r4, #0]
 8000aee:	4401      	add	r1, r0
 8000af0:	1850      	adds	r0, r2, r1
 8000af2:	4283      	cmp	r3, r0
 8000af4:	6011      	str	r1, [r2, #0]
 8000af6:	d1e0      	bne.n	8000aba <_free_r+0x22>
 8000af8:	6818      	ldr	r0, [r3, #0]
 8000afa:	685b      	ldr	r3, [r3, #4]
 8000afc:	6053      	str	r3, [r2, #4]
 8000afe:	4401      	add	r1, r0
 8000b00:	6011      	str	r1, [r2, #0]
 8000b02:	e7da      	b.n	8000aba <_free_r+0x22>
 8000b04:	d902      	bls.n	8000b0c <_free_r+0x74>
 8000b06:	230c      	movs	r3, #12
 8000b08:	602b      	str	r3, [r5, #0]
 8000b0a:	e7d6      	b.n	8000aba <_free_r+0x22>
 8000b0c:	6820      	ldr	r0, [r4, #0]
 8000b0e:	1821      	adds	r1, r4, r0
 8000b10:	428b      	cmp	r3, r1
 8000b12:	bf04      	itt	eq
 8000b14:	6819      	ldreq	r1, [r3, #0]
 8000b16:	685b      	ldreq	r3, [r3, #4]
 8000b18:	6063      	str	r3, [r4, #4]
 8000b1a:	bf04      	itt	eq
 8000b1c:	1809      	addeq	r1, r1, r0
 8000b1e:	6021      	streq	r1, [r4, #0]
 8000b20:	6054      	str	r4, [r2, #4]
 8000b22:	e7ca      	b.n	8000aba <_free_r+0x22>
 8000b24:	bd38      	pop	{r3, r4, r5, pc}
 8000b26:	bf00      	nop
 8000b28:	200000d0 	.word	0x200000d0

08000b2c <sbrk_aligned>:
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4e0e      	ldr	r6, [pc, #56]	; (8000b68 <sbrk_aligned+0x3c>)
 8000b30:	460c      	mov	r4, r1
 8000b32:	6831      	ldr	r1, [r6, #0]
 8000b34:	4605      	mov	r5, r0
 8000b36:	b911      	cbnz	r1, 8000b3e <sbrk_aligned+0x12>
 8000b38:	f000 fbc0 	bl	80012bc <_sbrk_r>
 8000b3c:	6030      	str	r0, [r6, #0]
 8000b3e:	4621      	mov	r1, r4
 8000b40:	4628      	mov	r0, r5
 8000b42:	f000 fbbb 	bl	80012bc <_sbrk_r>
 8000b46:	1c43      	adds	r3, r0, #1
 8000b48:	d00a      	beq.n	8000b60 <sbrk_aligned+0x34>
 8000b4a:	1cc4      	adds	r4, r0, #3
 8000b4c:	f024 0403 	bic.w	r4, r4, #3
 8000b50:	42a0      	cmp	r0, r4
 8000b52:	d007      	beq.n	8000b64 <sbrk_aligned+0x38>
 8000b54:	1a21      	subs	r1, r4, r0
 8000b56:	4628      	mov	r0, r5
 8000b58:	f000 fbb0 	bl	80012bc <_sbrk_r>
 8000b5c:	3001      	adds	r0, #1
 8000b5e:	d101      	bne.n	8000b64 <sbrk_aligned+0x38>
 8000b60:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000b64:	4620      	mov	r0, r4
 8000b66:	bd70      	pop	{r4, r5, r6, pc}
 8000b68:	200000d4 	.word	0x200000d4

08000b6c <_malloc_r>:
 8000b6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b70:	1ccd      	adds	r5, r1, #3
 8000b72:	f025 0503 	bic.w	r5, r5, #3
 8000b76:	3508      	adds	r5, #8
 8000b78:	2d0c      	cmp	r5, #12
 8000b7a:	bf38      	it	cc
 8000b7c:	250c      	movcc	r5, #12
 8000b7e:	2d00      	cmp	r5, #0
 8000b80:	4607      	mov	r7, r0
 8000b82:	db01      	blt.n	8000b88 <_malloc_r+0x1c>
 8000b84:	42a9      	cmp	r1, r5
 8000b86:	d905      	bls.n	8000b94 <_malloc_r+0x28>
 8000b88:	230c      	movs	r3, #12
 8000b8a:	603b      	str	r3, [r7, #0]
 8000b8c:	2600      	movs	r6, #0
 8000b8e:	4630      	mov	r0, r6
 8000b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b94:	4e2e      	ldr	r6, [pc, #184]	; (8000c50 <_malloc_r+0xe4>)
 8000b96:	f000 fe05 	bl	80017a4 <__malloc_lock>
 8000b9a:	6833      	ldr	r3, [r6, #0]
 8000b9c:	461c      	mov	r4, r3
 8000b9e:	bb34      	cbnz	r4, 8000bee <_malloc_r+0x82>
 8000ba0:	4629      	mov	r1, r5
 8000ba2:	4638      	mov	r0, r7
 8000ba4:	f7ff ffc2 	bl	8000b2c <sbrk_aligned>
 8000ba8:	1c43      	adds	r3, r0, #1
 8000baa:	4604      	mov	r4, r0
 8000bac:	d14d      	bne.n	8000c4a <_malloc_r+0xde>
 8000bae:	6834      	ldr	r4, [r6, #0]
 8000bb0:	4626      	mov	r6, r4
 8000bb2:	2e00      	cmp	r6, #0
 8000bb4:	d140      	bne.n	8000c38 <_malloc_r+0xcc>
 8000bb6:	6823      	ldr	r3, [r4, #0]
 8000bb8:	4631      	mov	r1, r6
 8000bba:	4638      	mov	r0, r7
 8000bbc:	eb04 0803 	add.w	r8, r4, r3
 8000bc0:	f000 fb7c 	bl	80012bc <_sbrk_r>
 8000bc4:	4580      	cmp	r8, r0
 8000bc6:	d13a      	bne.n	8000c3e <_malloc_r+0xd2>
 8000bc8:	6821      	ldr	r1, [r4, #0]
 8000bca:	3503      	adds	r5, #3
 8000bcc:	1a6d      	subs	r5, r5, r1
 8000bce:	f025 0503 	bic.w	r5, r5, #3
 8000bd2:	3508      	adds	r5, #8
 8000bd4:	2d0c      	cmp	r5, #12
 8000bd6:	bf38      	it	cc
 8000bd8:	250c      	movcc	r5, #12
 8000bda:	4629      	mov	r1, r5
 8000bdc:	4638      	mov	r0, r7
 8000bde:	f7ff ffa5 	bl	8000b2c <sbrk_aligned>
 8000be2:	3001      	adds	r0, #1
 8000be4:	d02b      	beq.n	8000c3e <_malloc_r+0xd2>
 8000be6:	6823      	ldr	r3, [r4, #0]
 8000be8:	442b      	add	r3, r5
 8000bea:	6023      	str	r3, [r4, #0]
 8000bec:	e00e      	b.n	8000c0c <_malloc_r+0xa0>
 8000bee:	6822      	ldr	r2, [r4, #0]
 8000bf0:	1b52      	subs	r2, r2, r5
 8000bf2:	d41e      	bmi.n	8000c32 <_malloc_r+0xc6>
 8000bf4:	2a0b      	cmp	r2, #11
 8000bf6:	d916      	bls.n	8000c26 <_malloc_r+0xba>
 8000bf8:	1961      	adds	r1, r4, r5
 8000bfa:	42a3      	cmp	r3, r4
 8000bfc:	6025      	str	r5, [r4, #0]
 8000bfe:	bf18      	it	ne
 8000c00:	6059      	strne	r1, [r3, #4]
 8000c02:	6863      	ldr	r3, [r4, #4]
 8000c04:	bf08      	it	eq
 8000c06:	6031      	streq	r1, [r6, #0]
 8000c08:	5162      	str	r2, [r4, r5]
 8000c0a:	604b      	str	r3, [r1, #4]
 8000c0c:	4638      	mov	r0, r7
 8000c0e:	f104 060b 	add.w	r6, r4, #11
 8000c12:	f000 fdcd 	bl	80017b0 <__malloc_unlock>
 8000c16:	f026 0607 	bic.w	r6, r6, #7
 8000c1a:	1d23      	adds	r3, r4, #4
 8000c1c:	1af2      	subs	r2, r6, r3
 8000c1e:	d0b6      	beq.n	8000b8e <_malloc_r+0x22>
 8000c20:	1b9b      	subs	r3, r3, r6
 8000c22:	50a3      	str	r3, [r4, r2]
 8000c24:	e7b3      	b.n	8000b8e <_malloc_r+0x22>
 8000c26:	6862      	ldr	r2, [r4, #4]
 8000c28:	42a3      	cmp	r3, r4
 8000c2a:	bf0c      	ite	eq
 8000c2c:	6032      	streq	r2, [r6, #0]
 8000c2e:	605a      	strne	r2, [r3, #4]
 8000c30:	e7ec      	b.n	8000c0c <_malloc_r+0xa0>
 8000c32:	4623      	mov	r3, r4
 8000c34:	6864      	ldr	r4, [r4, #4]
 8000c36:	e7b2      	b.n	8000b9e <_malloc_r+0x32>
 8000c38:	4634      	mov	r4, r6
 8000c3a:	6876      	ldr	r6, [r6, #4]
 8000c3c:	e7b9      	b.n	8000bb2 <_malloc_r+0x46>
 8000c3e:	230c      	movs	r3, #12
 8000c40:	603b      	str	r3, [r7, #0]
 8000c42:	4638      	mov	r0, r7
 8000c44:	f000 fdb4 	bl	80017b0 <__malloc_unlock>
 8000c48:	e7a1      	b.n	8000b8e <_malloc_r+0x22>
 8000c4a:	6025      	str	r5, [r4, #0]
 8000c4c:	e7de      	b.n	8000c0c <_malloc_r+0xa0>
 8000c4e:	bf00      	nop
 8000c50:	200000d0 	.word	0x200000d0

08000c54 <__sfputc_r>:
 8000c54:	6893      	ldr	r3, [r2, #8]
 8000c56:	3b01      	subs	r3, #1
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	b410      	push	{r4}
 8000c5c:	6093      	str	r3, [r2, #8]
 8000c5e:	da07      	bge.n	8000c70 <__sfputc_r+0x1c>
 8000c60:	6994      	ldr	r4, [r2, #24]
 8000c62:	42a3      	cmp	r3, r4
 8000c64:	db01      	blt.n	8000c6a <__sfputc_r+0x16>
 8000c66:	290a      	cmp	r1, #10
 8000c68:	d102      	bne.n	8000c70 <__sfputc_r+0x1c>
 8000c6a:	bc10      	pop	{r4}
 8000c6c:	f000 bb7a 	b.w	8001364 <__swbuf_r>
 8000c70:	6813      	ldr	r3, [r2, #0]
 8000c72:	1c58      	adds	r0, r3, #1
 8000c74:	6010      	str	r0, [r2, #0]
 8000c76:	7019      	strb	r1, [r3, #0]
 8000c78:	4608      	mov	r0, r1
 8000c7a:	bc10      	pop	{r4}
 8000c7c:	4770      	bx	lr

08000c7e <__sfputs_r>:
 8000c7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c80:	4606      	mov	r6, r0
 8000c82:	460f      	mov	r7, r1
 8000c84:	4614      	mov	r4, r2
 8000c86:	18d5      	adds	r5, r2, r3
 8000c88:	42ac      	cmp	r4, r5
 8000c8a:	d101      	bne.n	8000c90 <__sfputs_r+0x12>
 8000c8c:	2000      	movs	r0, #0
 8000c8e:	e007      	b.n	8000ca0 <__sfputs_r+0x22>
 8000c90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c94:	463a      	mov	r2, r7
 8000c96:	4630      	mov	r0, r6
 8000c98:	f7ff ffdc 	bl	8000c54 <__sfputc_r>
 8000c9c:	1c43      	adds	r3, r0, #1
 8000c9e:	d1f3      	bne.n	8000c88 <__sfputs_r+0xa>
 8000ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ca4 <_vfiprintf_r>:
 8000ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ca8:	460d      	mov	r5, r1
 8000caa:	b09d      	sub	sp, #116	; 0x74
 8000cac:	4614      	mov	r4, r2
 8000cae:	4698      	mov	r8, r3
 8000cb0:	4606      	mov	r6, r0
 8000cb2:	b118      	cbz	r0, 8000cbc <_vfiprintf_r+0x18>
 8000cb4:	6983      	ldr	r3, [r0, #24]
 8000cb6:	b90b      	cbnz	r3, 8000cbc <_vfiprintf_r+0x18>
 8000cb8:	f7ff fe34 	bl	8000924 <__sinit>
 8000cbc:	4b89      	ldr	r3, [pc, #548]	; (8000ee4 <_vfiprintf_r+0x240>)
 8000cbe:	429d      	cmp	r5, r3
 8000cc0:	d11b      	bne.n	8000cfa <_vfiprintf_r+0x56>
 8000cc2:	6875      	ldr	r5, [r6, #4]
 8000cc4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cc6:	07d9      	lsls	r1, r3, #31
 8000cc8:	d405      	bmi.n	8000cd6 <_vfiprintf_r+0x32>
 8000cca:	89ab      	ldrh	r3, [r5, #12]
 8000ccc:	059a      	lsls	r2, r3, #22
 8000cce:	d402      	bmi.n	8000cd6 <_vfiprintf_r+0x32>
 8000cd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cd2:	f7ff fed7 	bl	8000a84 <__retarget_lock_acquire_recursive>
 8000cd6:	89ab      	ldrh	r3, [r5, #12]
 8000cd8:	071b      	lsls	r3, r3, #28
 8000cda:	d501      	bpl.n	8000ce0 <_vfiprintf_r+0x3c>
 8000cdc:	692b      	ldr	r3, [r5, #16]
 8000cde:	b9eb      	cbnz	r3, 8000d1c <_vfiprintf_r+0x78>
 8000ce0:	4629      	mov	r1, r5
 8000ce2:	4630      	mov	r0, r6
 8000ce4:	f000 fba2 	bl	800142c <__swsetup_r>
 8000ce8:	b1c0      	cbz	r0, 8000d1c <_vfiprintf_r+0x78>
 8000cea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cec:	07dc      	lsls	r4, r3, #31
 8000cee:	d50e      	bpl.n	8000d0e <_vfiprintf_r+0x6a>
 8000cf0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cf4:	b01d      	add	sp, #116	; 0x74
 8000cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cfa:	4b7b      	ldr	r3, [pc, #492]	; (8000ee8 <_vfiprintf_r+0x244>)
 8000cfc:	429d      	cmp	r5, r3
 8000cfe:	d101      	bne.n	8000d04 <_vfiprintf_r+0x60>
 8000d00:	68b5      	ldr	r5, [r6, #8]
 8000d02:	e7df      	b.n	8000cc4 <_vfiprintf_r+0x20>
 8000d04:	4b79      	ldr	r3, [pc, #484]	; (8000eec <_vfiprintf_r+0x248>)
 8000d06:	429d      	cmp	r5, r3
 8000d08:	bf08      	it	eq
 8000d0a:	68f5      	ldreq	r5, [r6, #12]
 8000d0c:	e7da      	b.n	8000cc4 <_vfiprintf_r+0x20>
 8000d0e:	89ab      	ldrh	r3, [r5, #12]
 8000d10:	0598      	lsls	r0, r3, #22
 8000d12:	d4ed      	bmi.n	8000cf0 <_vfiprintf_r+0x4c>
 8000d14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d16:	f7ff feb6 	bl	8000a86 <__retarget_lock_release_recursive>
 8000d1a:	e7e9      	b.n	8000cf0 <_vfiprintf_r+0x4c>
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	9309      	str	r3, [sp, #36]	; 0x24
 8000d20:	2320      	movs	r3, #32
 8000d22:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d26:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d2a:	2330      	movs	r3, #48	; 0x30
 8000d2c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ef0 <_vfiprintf_r+0x24c>
 8000d30:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d34:	f04f 0901 	mov.w	r9, #1
 8000d38:	4623      	mov	r3, r4
 8000d3a:	469a      	mov	sl, r3
 8000d3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d40:	b10a      	cbz	r2, 8000d46 <_vfiprintf_r+0xa2>
 8000d42:	2a25      	cmp	r2, #37	; 0x25
 8000d44:	d1f9      	bne.n	8000d3a <_vfiprintf_r+0x96>
 8000d46:	ebba 0b04 	subs.w	fp, sl, r4
 8000d4a:	d00b      	beq.n	8000d64 <_vfiprintf_r+0xc0>
 8000d4c:	465b      	mov	r3, fp
 8000d4e:	4622      	mov	r2, r4
 8000d50:	4629      	mov	r1, r5
 8000d52:	4630      	mov	r0, r6
 8000d54:	f7ff ff93 	bl	8000c7e <__sfputs_r>
 8000d58:	3001      	adds	r0, #1
 8000d5a:	f000 80aa 	beq.w	8000eb2 <_vfiprintf_r+0x20e>
 8000d5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d60:	445a      	add	r2, fp
 8000d62:	9209      	str	r2, [sp, #36]	; 0x24
 8000d64:	f89a 3000 	ldrb.w	r3, [sl]
 8000d68:	2b00      	cmp	r3, #0
 8000d6a:	f000 80a2 	beq.w	8000eb2 <_vfiprintf_r+0x20e>
 8000d6e:	2300      	movs	r3, #0
 8000d70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000d74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d78:	f10a 0a01 	add.w	sl, sl, #1
 8000d7c:	9304      	str	r3, [sp, #16]
 8000d7e:	9307      	str	r3, [sp, #28]
 8000d80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d84:	931a      	str	r3, [sp, #104]	; 0x68
 8000d86:	4654      	mov	r4, sl
 8000d88:	2205      	movs	r2, #5
 8000d8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d8e:	4858      	ldr	r0, [pc, #352]	; (8000ef0 <_vfiprintf_r+0x24c>)
 8000d90:	f7ff fa2e 	bl	80001f0 <memchr>
 8000d94:	9a04      	ldr	r2, [sp, #16]
 8000d96:	b9d8      	cbnz	r0, 8000dd0 <_vfiprintf_r+0x12c>
 8000d98:	06d1      	lsls	r1, r2, #27
 8000d9a:	bf44      	itt	mi
 8000d9c:	2320      	movmi	r3, #32
 8000d9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000da2:	0713      	lsls	r3, r2, #28
 8000da4:	bf44      	itt	mi
 8000da6:	232b      	movmi	r3, #43	; 0x2b
 8000da8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000dac:	f89a 3000 	ldrb.w	r3, [sl]
 8000db0:	2b2a      	cmp	r3, #42	; 0x2a
 8000db2:	d015      	beq.n	8000de0 <_vfiprintf_r+0x13c>
 8000db4:	9a07      	ldr	r2, [sp, #28]
 8000db6:	4654      	mov	r4, sl
 8000db8:	2000      	movs	r0, #0
 8000dba:	f04f 0c0a 	mov.w	ip, #10
 8000dbe:	4621      	mov	r1, r4
 8000dc0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dc4:	3b30      	subs	r3, #48	; 0x30
 8000dc6:	2b09      	cmp	r3, #9
 8000dc8:	d94e      	bls.n	8000e68 <_vfiprintf_r+0x1c4>
 8000dca:	b1b0      	cbz	r0, 8000dfa <_vfiprintf_r+0x156>
 8000dcc:	9207      	str	r2, [sp, #28]
 8000dce:	e014      	b.n	8000dfa <_vfiprintf_r+0x156>
 8000dd0:	eba0 0308 	sub.w	r3, r0, r8
 8000dd4:	fa09 f303 	lsl.w	r3, r9, r3
 8000dd8:	4313      	orrs	r3, r2
 8000dda:	9304      	str	r3, [sp, #16]
 8000ddc:	46a2      	mov	sl, r4
 8000dde:	e7d2      	b.n	8000d86 <_vfiprintf_r+0xe2>
 8000de0:	9b03      	ldr	r3, [sp, #12]
 8000de2:	1d19      	adds	r1, r3, #4
 8000de4:	681b      	ldr	r3, [r3, #0]
 8000de6:	9103      	str	r1, [sp, #12]
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	bfbb      	ittet	lt
 8000dec:	425b      	neglt	r3, r3
 8000dee:	f042 0202 	orrlt.w	r2, r2, #2
 8000df2:	9307      	strge	r3, [sp, #28]
 8000df4:	9307      	strlt	r3, [sp, #28]
 8000df6:	bfb8      	it	lt
 8000df8:	9204      	strlt	r2, [sp, #16]
 8000dfa:	7823      	ldrb	r3, [r4, #0]
 8000dfc:	2b2e      	cmp	r3, #46	; 0x2e
 8000dfe:	d10c      	bne.n	8000e1a <_vfiprintf_r+0x176>
 8000e00:	7863      	ldrb	r3, [r4, #1]
 8000e02:	2b2a      	cmp	r3, #42	; 0x2a
 8000e04:	d135      	bne.n	8000e72 <_vfiprintf_r+0x1ce>
 8000e06:	9b03      	ldr	r3, [sp, #12]
 8000e08:	1d1a      	adds	r2, r3, #4
 8000e0a:	681b      	ldr	r3, [r3, #0]
 8000e0c:	9203      	str	r2, [sp, #12]
 8000e0e:	2b00      	cmp	r3, #0
 8000e10:	bfb8      	it	lt
 8000e12:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000e16:	3402      	adds	r4, #2
 8000e18:	9305      	str	r3, [sp, #20]
 8000e1a:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000ef4 <_vfiprintf_r+0x250>
 8000e1e:	7821      	ldrb	r1, [r4, #0]
 8000e20:	2203      	movs	r2, #3
 8000e22:	4650      	mov	r0, sl
 8000e24:	f7ff f9e4 	bl	80001f0 <memchr>
 8000e28:	b140      	cbz	r0, 8000e3c <_vfiprintf_r+0x198>
 8000e2a:	2340      	movs	r3, #64	; 0x40
 8000e2c:	eba0 000a 	sub.w	r0, r0, sl
 8000e30:	fa03 f000 	lsl.w	r0, r3, r0
 8000e34:	9b04      	ldr	r3, [sp, #16]
 8000e36:	4303      	orrs	r3, r0
 8000e38:	3401      	adds	r4, #1
 8000e3a:	9304      	str	r3, [sp, #16]
 8000e3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e40:	482d      	ldr	r0, [pc, #180]	; (8000ef8 <_vfiprintf_r+0x254>)
 8000e42:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e46:	2206      	movs	r2, #6
 8000e48:	f7ff f9d2 	bl	80001f0 <memchr>
 8000e4c:	2800      	cmp	r0, #0
 8000e4e:	d03f      	beq.n	8000ed0 <_vfiprintf_r+0x22c>
 8000e50:	4b2a      	ldr	r3, [pc, #168]	; (8000efc <_vfiprintf_r+0x258>)
 8000e52:	bb1b      	cbnz	r3, 8000e9c <_vfiprintf_r+0x1f8>
 8000e54:	9b03      	ldr	r3, [sp, #12]
 8000e56:	3307      	adds	r3, #7
 8000e58:	f023 0307 	bic.w	r3, r3, #7
 8000e5c:	3308      	adds	r3, #8
 8000e5e:	9303      	str	r3, [sp, #12]
 8000e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e62:	443b      	add	r3, r7
 8000e64:	9309      	str	r3, [sp, #36]	; 0x24
 8000e66:	e767      	b.n	8000d38 <_vfiprintf_r+0x94>
 8000e68:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e6c:	460c      	mov	r4, r1
 8000e6e:	2001      	movs	r0, #1
 8000e70:	e7a5      	b.n	8000dbe <_vfiprintf_r+0x11a>
 8000e72:	2300      	movs	r3, #0
 8000e74:	3401      	adds	r4, #1
 8000e76:	9305      	str	r3, [sp, #20]
 8000e78:	4619      	mov	r1, r3
 8000e7a:	f04f 0c0a 	mov.w	ip, #10
 8000e7e:	4620      	mov	r0, r4
 8000e80:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e84:	3a30      	subs	r2, #48	; 0x30
 8000e86:	2a09      	cmp	r2, #9
 8000e88:	d903      	bls.n	8000e92 <_vfiprintf_r+0x1ee>
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d0c5      	beq.n	8000e1a <_vfiprintf_r+0x176>
 8000e8e:	9105      	str	r1, [sp, #20]
 8000e90:	e7c3      	b.n	8000e1a <_vfiprintf_r+0x176>
 8000e92:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e96:	4604      	mov	r4, r0
 8000e98:	2301      	movs	r3, #1
 8000e9a:	e7f0      	b.n	8000e7e <_vfiprintf_r+0x1da>
 8000e9c:	ab03      	add	r3, sp, #12
 8000e9e:	9300      	str	r3, [sp, #0]
 8000ea0:	462a      	mov	r2, r5
 8000ea2:	4b17      	ldr	r3, [pc, #92]	; (8000f00 <_vfiprintf_r+0x25c>)
 8000ea4:	a904      	add	r1, sp, #16
 8000ea6:	4630      	mov	r0, r6
 8000ea8:	f3af 8000 	nop.w
 8000eac:	4607      	mov	r7, r0
 8000eae:	1c78      	adds	r0, r7, #1
 8000eb0:	d1d6      	bne.n	8000e60 <_vfiprintf_r+0x1bc>
 8000eb2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000eb4:	07d9      	lsls	r1, r3, #31
 8000eb6:	d405      	bmi.n	8000ec4 <_vfiprintf_r+0x220>
 8000eb8:	89ab      	ldrh	r3, [r5, #12]
 8000eba:	059a      	lsls	r2, r3, #22
 8000ebc:	d402      	bmi.n	8000ec4 <_vfiprintf_r+0x220>
 8000ebe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ec0:	f7ff fde1 	bl	8000a86 <__retarget_lock_release_recursive>
 8000ec4:	89ab      	ldrh	r3, [r5, #12]
 8000ec6:	065b      	lsls	r3, r3, #25
 8000ec8:	f53f af12 	bmi.w	8000cf0 <_vfiprintf_r+0x4c>
 8000ecc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ece:	e711      	b.n	8000cf4 <_vfiprintf_r+0x50>
 8000ed0:	ab03      	add	r3, sp, #12
 8000ed2:	9300      	str	r3, [sp, #0]
 8000ed4:	462a      	mov	r2, r5
 8000ed6:	4b0a      	ldr	r3, [pc, #40]	; (8000f00 <_vfiprintf_r+0x25c>)
 8000ed8:	a904      	add	r1, sp, #16
 8000eda:	4630      	mov	r0, r6
 8000edc:	f000 f880 	bl	8000fe0 <_printf_i>
 8000ee0:	e7e4      	b.n	8000eac <_vfiprintf_r+0x208>
 8000ee2:	bf00      	nop
 8000ee4:	080019f4 	.word	0x080019f4
 8000ee8:	08001a14 	.word	0x08001a14
 8000eec:	080019d4 	.word	0x080019d4
 8000ef0:	08001a34 	.word	0x08001a34
 8000ef4:	08001a3a 	.word	0x08001a3a
 8000ef8:	08001a3e 	.word	0x08001a3e
 8000efc:	00000000 	.word	0x00000000
 8000f00:	08000c7f 	.word	0x08000c7f

08000f04 <_printf_common>:
 8000f04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f08:	4616      	mov	r6, r2
 8000f0a:	4699      	mov	r9, r3
 8000f0c:	688a      	ldr	r2, [r1, #8]
 8000f0e:	690b      	ldr	r3, [r1, #16]
 8000f10:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f14:	4293      	cmp	r3, r2
 8000f16:	bfb8      	it	lt
 8000f18:	4613      	movlt	r3, r2
 8000f1a:	6033      	str	r3, [r6, #0]
 8000f1c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f20:	4607      	mov	r7, r0
 8000f22:	460c      	mov	r4, r1
 8000f24:	b10a      	cbz	r2, 8000f2a <_printf_common+0x26>
 8000f26:	3301      	adds	r3, #1
 8000f28:	6033      	str	r3, [r6, #0]
 8000f2a:	6823      	ldr	r3, [r4, #0]
 8000f2c:	0699      	lsls	r1, r3, #26
 8000f2e:	bf42      	ittt	mi
 8000f30:	6833      	ldrmi	r3, [r6, #0]
 8000f32:	3302      	addmi	r3, #2
 8000f34:	6033      	strmi	r3, [r6, #0]
 8000f36:	6825      	ldr	r5, [r4, #0]
 8000f38:	f015 0506 	ands.w	r5, r5, #6
 8000f3c:	d106      	bne.n	8000f4c <_printf_common+0x48>
 8000f3e:	f104 0a19 	add.w	sl, r4, #25
 8000f42:	68e3      	ldr	r3, [r4, #12]
 8000f44:	6832      	ldr	r2, [r6, #0]
 8000f46:	1a9b      	subs	r3, r3, r2
 8000f48:	42ab      	cmp	r3, r5
 8000f4a:	dc26      	bgt.n	8000f9a <_printf_common+0x96>
 8000f4c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f50:	1e13      	subs	r3, r2, #0
 8000f52:	6822      	ldr	r2, [r4, #0]
 8000f54:	bf18      	it	ne
 8000f56:	2301      	movne	r3, #1
 8000f58:	0692      	lsls	r2, r2, #26
 8000f5a:	d42b      	bmi.n	8000fb4 <_printf_common+0xb0>
 8000f5c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f60:	4649      	mov	r1, r9
 8000f62:	4638      	mov	r0, r7
 8000f64:	47c0      	blx	r8
 8000f66:	3001      	adds	r0, #1
 8000f68:	d01e      	beq.n	8000fa8 <_printf_common+0xa4>
 8000f6a:	6823      	ldr	r3, [r4, #0]
 8000f6c:	68e5      	ldr	r5, [r4, #12]
 8000f6e:	6832      	ldr	r2, [r6, #0]
 8000f70:	f003 0306 	and.w	r3, r3, #6
 8000f74:	2b04      	cmp	r3, #4
 8000f76:	bf08      	it	eq
 8000f78:	1aad      	subeq	r5, r5, r2
 8000f7a:	68a3      	ldr	r3, [r4, #8]
 8000f7c:	6922      	ldr	r2, [r4, #16]
 8000f7e:	bf0c      	ite	eq
 8000f80:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f84:	2500      	movne	r5, #0
 8000f86:	4293      	cmp	r3, r2
 8000f88:	bfc4      	itt	gt
 8000f8a:	1a9b      	subgt	r3, r3, r2
 8000f8c:	18ed      	addgt	r5, r5, r3
 8000f8e:	2600      	movs	r6, #0
 8000f90:	341a      	adds	r4, #26
 8000f92:	42b5      	cmp	r5, r6
 8000f94:	d11a      	bne.n	8000fcc <_printf_common+0xc8>
 8000f96:	2000      	movs	r0, #0
 8000f98:	e008      	b.n	8000fac <_printf_common+0xa8>
 8000f9a:	2301      	movs	r3, #1
 8000f9c:	4652      	mov	r2, sl
 8000f9e:	4649      	mov	r1, r9
 8000fa0:	4638      	mov	r0, r7
 8000fa2:	47c0      	blx	r8
 8000fa4:	3001      	adds	r0, #1
 8000fa6:	d103      	bne.n	8000fb0 <_printf_common+0xac>
 8000fa8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb0:	3501      	adds	r5, #1
 8000fb2:	e7c6      	b.n	8000f42 <_printf_common+0x3e>
 8000fb4:	18e1      	adds	r1, r4, r3
 8000fb6:	1c5a      	adds	r2, r3, #1
 8000fb8:	2030      	movs	r0, #48	; 0x30
 8000fba:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000fbe:	4422      	add	r2, r4
 8000fc0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000fc4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000fc8:	3302      	adds	r3, #2
 8000fca:	e7c7      	b.n	8000f5c <_printf_common+0x58>
 8000fcc:	2301      	movs	r3, #1
 8000fce:	4622      	mov	r2, r4
 8000fd0:	4649      	mov	r1, r9
 8000fd2:	4638      	mov	r0, r7
 8000fd4:	47c0      	blx	r8
 8000fd6:	3001      	adds	r0, #1
 8000fd8:	d0e6      	beq.n	8000fa8 <_printf_common+0xa4>
 8000fda:	3601      	adds	r6, #1
 8000fdc:	e7d9      	b.n	8000f92 <_printf_common+0x8e>
	...

08000fe0 <_printf_i>:
 8000fe0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fe4:	7e0f      	ldrb	r7, [r1, #24]
 8000fe6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fe8:	2f78      	cmp	r7, #120	; 0x78
 8000fea:	4691      	mov	r9, r2
 8000fec:	4680      	mov	r8, r0
 8000fee:	460c      	mov	r4, r1
 8000ff0:	469a      	mov	sl, r3
 8000ff2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000ff6:	d807      	bhi.n	8001008 <_printf_i+0x28>
 8000ff8:	2f62      	cmp	r7, #98	; 0x62
 8000ffa:	d80a      	bhi.n	8001012 <_printf_i+0x32>
 8000ffc:	2f00      	cmp	r7, #0
 8000ffe:	f000 80d8 	beq.w	80011b2 <_printf_i+0x1d2>
 8001002:	2f58      	cmp	r7, #88	; 0x58
 8001004:	f000 80a3 	beq.w	800114e <_printf_i+0x16e>
 8001008:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800100c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001010:	e03a      	b.n	8001088 <_printf_i+0xa8>
 8001012:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001016:	2b15      	cmp	r3, #21
 8001018:	d8f6      	bhi.n	8001008 <_printf_i+0x28>
 800101a:	a101      	add	r1, pc, #4	; (adr r1, 8001020 <_printf_i+0x40>)
 800101c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001020:	08001079 	.word	0x08001079
 8001024:	0800108d 	.word	0x0800108d
 8001028:	08001009 	.word	0x08001009
 800102c:	08001009 	.word	0x08001009
 8001030:	08001009 	.word	0x08001009
 8001034:	08001009 	.word	0x08001009
 8001038:	0800108d 	.word	0x0800108d
 800103c:	08001009 	.word	0x08001009
 8001040:	08001009 	.word	0x08001009
 8001044:	08001009 	.word	0x08001009
 8001048:	08001009 	.word	0x08001009
 800104c:	08001199 	.word	0x08001199
 8001050:	080010bd 	.word	0x080010bd
 8001054:	0800117b 	.word	0x0800117b
 8001058:	08001009 	.word	0x08001009
 800105c:	08001009 	.word	0x08001009
 8001060:	080011bb 	.word	0x080011bb
 8001064:	08001009 	.word	0x08001009
 8001068:	080010bd 	.word	0x080010bd
 800106c:	08001009 	.word	0x08001009
 8001070:	08001009 	.word	0x08001009
 8001074:	08001183 	.word	0x08001183
 8001078:	682b      	ldr	r3, [r5, #0]
 800107a:	1d1a      	adds	r2, r3, #4
 800107c:	681b      	ldr	r3, [r3, #0]
 800107e:	602a      	str	r2, [r5, #0]
 8001080:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001084:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001088:	2301      	movs	r3, #1
 800108a:	e0a3      	b.n	80011d4 <_printf_i+0x1f4>
 800108c:	6820      	ldr	r0, [r4, #0]
 800108e:	6829      	ldr	r1, [r5, #0]
 8001090:	0606      	lsls	r6, r0, #24
 8001092:	f101 0304 	add.w	r3, r1, #4
 8001096:	d50a      	bpl.n	80010ae <_printf_i+0xce>
 8001098:	680e      	ldr	r6, [r1, #0]
 800109a:	602b      	str	r3, [r5, #0]
 800109c:	2e00      	cmp	r6, #0
 800109e:	da03      	bge.n	80010a8 <_printf_i+0xc8>
 80010a0:	232d      	movs	r3, #45	; 0x2d
 80010a2:	4276      	negs	r6, r6
 80010a4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80010a8:	485e      	ldr	r0, [pc, #376]	; (8001224 <_printf_i+0x244>)
 80010aa:	230a      	movs	r3, #10
 80010ac:	e019      	b.n	80010e2 <_printf_i+0x102>
 80010ae:	680e      	ldr	r6, [r1, #0]
 80010b0:	602b      	str	r3, [r5, #0]
 80010b2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80010b6:	bf18      	it	ne
 80010b8:	b236      	sxthne	r6, r6
 80010ba:	e7ef      	b.n	800109c <_printf_i+0xbc>
 80010bc:	682b      	ldr	r3, [r5, #0]
 80010be:	6820      	ldr	r0, [r4, #0]
 80010c0:	1d19      	adds	r1, r3, #4
 80010c2:	6029      	str	r1, [r5, #0]
 80010c4:	0601      	lsls	r1, r0, #24
 80010c6:	d501      	bpl.n	80010cc <_printf_i+0xec>
 80010c8:	681e      	ldr	r6, [r3, #0]
 80010ca:	e002      	b.n	80010d2 <_printf_i+0xf2>
 80010cc:	0646      	lsls	r6, r0, #25
 80010ce:	d5fb      	bpl.n	80010c8 <_printf_i+0xe8>
 80010d0:	881e      	ldrh	r6, [r3, #0]
 80010d2:	4854      	ldr	r0, [pc, #336]	; (8001224 <_printf_i+0x244>)
 80010d4:	2f6f      	cmp	r7, #111	; 0x6f
 80010d6:	bf0c      	ite	eq
 80010d8:	2308      	moveq	r3, #8
 80010da:	230a      	movne	r3, #10
 80010dc:	2100      	movs	r1, #0
 80010de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010e2:	6865      	ldr	r5, [r4, #4]
 80010e4:	60a5      	str	r5, [r4, #8]
 80010e6:	2d00      	cmp	r5, #0
 80010e8:	bfa2      	ittt	ge
 80010ea:	6821      	ldrge	r1, [r4, #0]
 80010ec:	f021 0104 	bicge.w	r1, r1, #4
 80010f0:	6021      	strge	r1, [r4, #0]
 80010f2:	b90e      	cbnz	r6, 80010f8 <_printf_i+0x118>
 80010f4:	2d00      	cmp	r5, #0
 80010f6:	d04d      	beq.n	8001194 <_printf_i+0x1b4>
 80010f8:	4615      	mov	r5, r2
 80010fa:	fbb6 f1f3 	udiv	r1, r6, r3
 80010fe:	fb03 6711 	mls	r7, r3, r1, r6
 8001102:	5dc7      	ldrb	r7, [r0, r7]
 8001104:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001108:	4637      	mov	r7, r6
 800110a:	42bb      	cmp	r3, r7
 800110c:	460e      	mov	r6, r1
 800110e:	d9f4      	bls.n	80010fa <_printf_i+0x11a>
 8001110:	2b08      	cmp	r3, #8
 8001112:	d10b      	bne.n	800112c <_printf_i+0x14c>
 8001114:	6823      	ldr	r3, [r4, #0]
 8001116:	07de      	lsls	r6, r3, #31
 8001118:	d508      	bpl.n	800112c <_printf_i+0x14c>
 800111a:	6923      	ldr	r3, [r4, #16]
 800111c:	6861      	ldr	r1, [r4, #4]
 800111e:	4299      	cmp	r1, r3
 8001120:	bfde      	ittt	le
 8001122:	2330      	movle	r3, #48	; 0x30
 8001124:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001128:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800112c:	1b52      	subs	r2, r2, r5
 800112e:	6122      	str	r2, [r4, #16]
 8001130:	f8cd a000 	str.w	sl, [sp]
 8001134:	464b      	mov	r3, r9
 8001136:	aa03      	add	r2, sp, #12
 8001138:	4621      	mov	r1, r4
 800113a:	4640      	mov	r0, r8
 800113c:	f7ff fee2 	bl	8000f04 <_printf_common>
 8001140:	3001      	adds	r0, #1
 8001142:	d14c      	bne.n	80011de <_printf_i+0x1fe>
 8001144:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001148:	b004      	add	sp, #16
 800114a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800114e:	4835      	ldr	r0, [pc, #212]	; (8001224 <_printf_i+0x244>)
 8001150:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001154:	6829      	ldr	r1, [r5, #0]
 8001156:	6823      	ldr	r3, [r4, #0]
 8001158:	f851 6b04 	ldr.w	r6, [r1], #4
 800115c:	6029      	str	r1, [r5, #0]
 800115e:	061d      	lsls	r5, r3, #24
 8001160:	d514      	bpl.n	800118c <_printf_i+0x1ac>
 8001162:	07df      	lsls	r7, r3, #31
 8001164:	bf44      	itt	mi
 8001166:	f043 0320 	orrmi.w	r3, r3, #32
 800116a:	6023      	strmi	r3, [r4, #0]
 800116c:	b91e      	cbnz	r6, 8001176 <_printf_i+0x196>
 800116e:	6823      	ldr	r3, [r4, #0]
 8001170:	f023 0320 	bic.w	r3, r3, #32
 8001174:	6023      	str	r3, [r4, #0]
 8001176:	2310      	movs	r3, #16
 8001178:	e7b0      	b.n	80010dc <_printf_i+0xfc>
 800117a:	6823      	ldr	r3, [r4, #0]
 800117c:	f043 0320 	orr.w	r3, r3, #32
 8001180:	6023      	str	r3, [r4, #0]
 8001182:	2378      	movs	r3, #120	; 0x78
 8001184:	4828      	ldr	r0, [pc, #160]	; (8001228 <_printf_i+0x248>)
 8001186:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800118a:	e7e3      	b.n	8001154 <_printf_i+0x174>
 800118c:	0659      	lsls	r1, r3, #25
 800118e:	bf48      	it	mi
 8001190:	b2b6      	uxthmi	r6, r6
 8001192:	e7e6      	b.n	8001162 <_printf_i+0x182>
 8001194:	4615      	mov	r5, r2
 8001196:	e7bb      	b.n	8001110 <_printf_i+0x130>
 8001198:	682b      	ldr	r3, [r5, #0]
 800119a:	6826      	ldr	r6, [r4, #0]
 800119c:	6961      	ldr	r1, [r4, #20]
 800119e:	1d18      	adds	r0, r3, #4
 80011a0:	6028      	str	r0, [r5, #0]
 80011a2:	0635      	lsls	r5, r6, #24
 80011a4:	681b      	ldr	r3, [r3, #0]
 80011a6:	d501      	bpl.n	80011ac <_printf_i+0x1cc>
 80011a8:	6019      	str	r1, [r3, #0]
 80011aa:	e002      	b.n	80011b2 <_printf_i+0x1d2>
 80011ac:	0670      	lsls	r0, r6, #25
 80011ae:	d5fb      	bpl.n	80011a8 <_printf_i+0x1c8>
 80011b0:	8019      	strh	r1, [r3, #0]
 80011b2:	2300      	movs	r3, #0
 80011b4:	6123      	str	r3, [r4, #16]
 80011b6:	4615      	mov	r5, r2
 80011b8:	e7ba      	b.n	8001130 <_printf_i+0x150>
 80011ba:	682b      	ldr	r3, [r5, #0]
 80011bc:	1d1a      	adds	r2, r3, #4
 80011be:	602a      	str	r2, [r5, #0]
 80011c0:	681d      	ldr	r5, [r3, #0]
 80011c2:	6862      	ldr	r2, [r4, #4]
 80011c4:	2100      	movs	r1, #0
 80011c6:	4628      	mov	r0, r5
 80011c8:	f7ff f812 	bl	80001f0 <memchr>
 80011cc:	b108      	cbz	r0, 80011d2 <_printf_i+0x1f2>
 80011ce:	1b40      	subs	r0, r0, r5
 80011d0:	6060      	str	r0, [r4, #4]
 80011d2:	6863      	ldr	r3, [r4, #4]
 80011d4:	6123      	str	r3, [r4, #16]
 80011d6:	2300      	movs	r3, #0
 80011d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011dc:	e7a8      	b.n	8001130 <_printf_i+0x150>
 80011de:	6923      	ldr	r3, [r4, #16]
 80011e0:	462a      	mov	r2, r5
 80011e2:	4649      	mov	r1, r9
 80011e4:	4640      	mov	r0, r8
 80011e6:	47d0      	blx	sl
 80011e8:	3001      	adds	r0, #1
 80011ea:	d0ab      	beq.n	8001144 <_printf_i+0x164>
 80011ec:	6823      	ldr	r3, [r4, #0]
 80011ee:	079b      	lsls	r3, r3, #30
 80011f0:	d413      	bmi.n	800121a <_printf_i+0x23a>
 80011f2:	68e0      	ldr	r0, [r4, #12]
 80011f4:	9b03      	ldr	r3, [sp, #12]
 80011f6:	4298      	cmp	r0, r3
 80011f8:	bfb8      	it	lt
 80011fa:	4618      	movlt	r0, r3
 80011fc:	e7a4      	b.n	8001148 <_printf_i+0x168>
 80011fe:	2301      	movs	r3, #1
 8001200:	4632      	mov	r2, r6
 8001202:	4649      	mov	r1, r9
 8001204:	4640      	mov	r0, r8
 8001206:	47d0      	blx	sl
 8001208:	3001      	adds	r0, #1
 800120a:	d09b      	beq.n	8001144 <_printf_i+0x164>
 800120c:	3501      	adds	r5, #1
 800120e:	68e3      	ldr	r3, [r4, #12]
 8001210:	9903      	ldr	r1, [sp, #12]
 8001212:	1a5b      	subs	r3, r3, r1
 8001214:	42ab      	cmp	r3, r5
 8001216:	dcf2      	bgt.n	80011fe <_printf_i+0x21e>
 8001218:	e7eb      	b.n	80011f2 <_printf_i+0x212>
 800121a:	2500      	movs	r5, #0
 800121c:	f104 0619 	add.w	r6, r4, #25
 8001220:	e7f5      	b.n	800120e <_printf_i+0x22e>
 8001222:	bf00      	nop
 8001224:	08001a45 	.word	0x08001a45
 8001228:	08001a56 	.word	0x08001a56

0800122c <_putc_r>:
 800122c:	b570      	push	{r4, r5, r6, lr}
 800122e:	460d      	mov	r5, r1
 8001230:	4614      	mov	r4, r2
 8001232:	4606      	mov	r6, r0
 8001234:	b118      	cbz	r0, 800123e <_putc_r+0x12>
 8001236:	6983      	ldr	r3, [r0, #24]
 8001238:	b90b      	cbnz	r3, 800123e <_putc_r+0x12>
 800123a:	f7ff fb73 	bl	8000924 <__sinit>
 800123e:	4b1c      	ldr	r3, [pc, #112]	; (80012b0 <_putc_r+0x84>)
 8001240:	429c      	cmp	r4, r3
 8001242:	d124      	bne.n	800128e <_putc_r+0x62>
 8001244:	6874      	ldr	r4, [r6, #4]
 8001246:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001248:	07d8      	lsls	r0, r3, #31
 800124a:	d405      	bmi.n	8001258 <_putc_r+0x2c>
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	0599      	lsls	r1, r3, #22
 8001250:	d402      	bmi.n	8001258 <_putc_r+0x2c>
 8001252:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001254:	f7ff fc16 	bl	8000a84 <__retarget_lock_acquire_recursive>
 8001258:	68a3      	ldr	r3, [r4, #8]
 800125a:	3b01      	subs	r3, #1
 800125c:	2b00      	cmp	r3, #0
 800125e:	60a3      	str	r3, [r4, #8]
 8001260:	da05      	bge.n	800126e <_putc_r+0x42>
 8001262:	69a2      	ldr	r2, [r4, #24]
 8001264:	4293      	cmp	r3, r2
 8001266:	db1c      	blt.n	80012a2 <_putc_r+0x76>
 8001268:	b2eb      	uxtb	r3, r5
 800126a:	2b0a      	cmp	r3, #10
 800126c:	d019      	beq.n	80012a2 <_putc_r+0x76>
 800126e:	6823      	ldr	r3, [r4, #0]
 8001270:	1c5a      	adds	r2, r3, #1
 8001272:	6022      	str	r2, [r4, #0]
 8001274:	701d      	strb	r5, [r3, #0]
 8001276:	b2ed      	uxtb	r5, r5
 8001278:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800127a:	07da      	lsls	r2, r3, #31
 800127c:	d405      	bmi.n	800128a <_putc_r+0x5e>
 800127e:	89a3      	ldrh	r3, [r4, #12]
 8001280:	059b      	lsls	r3, r3, #22
 8001282:	d402      	bmi.n	800128a <_putc_r+0x5e>
 8001284:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001286:	f7ff fbfe 	bl	8000a86 <__retarget_lock_release_recursive>
 800128a:	4628      	mov	r0, r5
 800128c:	bd70      	pop	{r4, r5, r6, pc}
 800128e:	4b09      	ldr	r3, [pc, #36]	; (80012b4 <_putc_r+0x88>)
 8001290:	429c      	cmp	r4, r3
 8001292:	d101      	bne.n	8001298 <_putc_r+0x6c>
 8001294:	68b4      	ldr	r4, [r6, #8]
 8001296:	e7d6      	b.n	8001246 <_putc_r+0x1a>
 8001298:	4b07      	ldr	r3, [pc, #28]	; (80012b8 <_putc_r+0x8c>)
 800129a:	429c      	cmp	r4, r3
 800129c:	bf08      	it	eq
 800129e:	68f4      	ldreq	r4, [r6, #12]
 80012a0:	e7d1      	b.n	8001246 <_putc_r+0x1a>
 80012a2:	4629      	mov	r1, r5
 80012a4:	4622      	mov	r2, r4
 80012a6:	4630      	mov	r0, r6
 80012a8:	f000 f85c 	bl	8001364 <__swbuf_r>
 80012ac:	4605      	mov	r5, r0
 80012ae:	e7e3      	b.n	8001278 <_putc_r+0x4c>
 80012b0:	080019f4 	.word	0x080019f4
 80012b4:	08001a14 	.word	0x08001a14
 80012b8:	080019d4 	.word	0x080019d4

080012bc <_sbrk_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	4d06      	ldr	r5, [pc, #24]	; (80012d8 <_sbrk_r+0x1c>)
 80012c0:	2300      	movs	r3, #0
 80012c2:	4604      	mov	r4, r0
 80012c4:	4608      	mov	r0, r1
 80012c6:	602b      	str	r3, [r5, #0]
 80012c8:	f7ff f9ba 	bl	8000640 <_sbrk>
 80012cc:	1c43      	adds	r3, r0, #1
 80012ce:	d102      	bne.n	80012d6 <_sbrk_r+0x1a>
 80012d0:	682b      	ldr	r3, [r5, #0]
 80012d2:	b103      	cbz	r3, 80012d6 <_sbrk_r+0x1a>
 80012d4:	6023      	str	r3, [r4, #0]
 80012d6:	bd38      	pop	{r3, r4, r5, pc}
 80012d8:	200000d8 	.word	0x200000d8

080012dc <__sread>:
 80012dc:	b510      	push	{r4, lr}
 80012de:	460c      	mov	r4, r1
 80012e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e4:	f000 fa6a 	bl	80017bc <_read_r>
 80012e8:	2800      	cmp	r0, #0
 80012ea:	bfab      	itete	ge
 80012ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012ee:	89a3      	ldrhlt	r3, [r4, #12]
 80012f0:	181b      	addge	r3, r3, r0
 80012f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012f6:	bfac      	ite	ge
 80012f8:	6563      	strge	r3, [r4, #84]	; 0x54
 80012fa:	81a3      	strhlt	r3, [r4, #12]
 80012fc:	bd10      	pop	{r4, pc}

080012fe <__swrite>:
 80012fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001302:	461f      	mov	r7, r3
 8001304:	898b      	ldrh	r3, [r1, #12]
 8001306:	05db      	lsls	r3, r3, #23
 8001308:	4605      	mov	r5, r0
 800130a:	460c      	mov	r4, r1
 800130c:	4616      	mov	r6, r2
 800130e:	d505      	bpl.n	800131c <__swrite+0x1e>
 8001310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001314:	2302      	movs	r3, #2
 8001316:	2200      	movs	r2, #0
 8001318:	f000 f9cc 	bl	80016b4 <_lseek_r>
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001322:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001326:	81a3      	strh	r3, [r4, #12]
 8001328:	4632      	mov	r2, r6
 800132a:	463b      	mov	r3, r7
 800132c:	4628      	mov	r0, r5
 800132e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001332:	f000 b869 	b.w	8001408 <_write_r>

08001336 <__sseek>:
 8001336:	b510      	push	{r4, lr}
 8001338:	460c      	mov	r4, r1
 800133a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800133e:	f000 f9b9 	bl	80016b4 <_lseek_r>
 8001342:	1c43      	adds	r3, r0, #1
 8001344:	89a3      	ldrh	r3, [r4, #12]
 8001346:	bf15      	itete	ne
 8001348:	6560      	strne	r0, [r4, #84]	; 0x54
 800134a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800134e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001352:	81a3      	strheq	r3, [r4, #12]
 8001354:	bf18      	it	ne
 8001356:	81a3      	strhne	r3, [r4, #12]
 8001358:	bd10      	pop	{r4, pc}

0800135a <__sclose>:
 800135a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800135e:	f000 b8db 	b.w	8001518 <_close_r>
	...

08001364 <__swbuf_r>:
 8001364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001366:	460e      	mov	r6, r1
 8001368:	4614      	mov	r4, r2
 800136a:	4605      	mov	r5, r0
 800136c:	b118      	cbz	r0, 8001376 <__swbuf_r+0x12>
 800136e:	6983      	ldr	r3, [r0, #24]
 8001370:	b90b      	cbnz	r3, 8001376 <__swbuf_r+0x12>
 8001372:	f7ff fad7 	bl	8000924 <__sinit>
 8001376:	4b21      	ldr	r3, [pc, #132]	; (80013fc <__swbuf_r+0x98>)
 8001378:	429c      	cmp	r4, r3
 800137a:	d12b      	bne.n	80013d4 <__swbuf_r+0x70>
 800137c:	686c      	ldr	r4, [r5, #4]
 800137e:	69a3      	ldr	r3, [r4, #24]
 8001380:	60a3      	str	r3, [r4, #8]
 8001382:	89a3      	ldrh	r3, [r4, #12]
 8001384:	071a      	lsls	r2, r3, #28
 8001386:	d52f      	bpl.n	80013e8 <__swbuf_r+0x84>
 8001388:	6923      	ldr	r3, [r4, #16]
 800138a:	b36b      	cbz	r3, 80013e8 <__swbuf_r+0x84>
 800138c:	6923      	ldr	r3, [r4, #16]
 800138e:	6820      	ldr	r0, [r4, #0]
 8001390:	1ac0      	subs	r0, r0, r3
 8001392:	6963      	ldr	r3, [r4, #20]
 8001394:	b2f6      	uxtb	r6, r6
 8001396:	4283      	cmp	r3, r0
 8001398:	4637      	mov	r7, r6
 800139a:	dc04      	bgt.n	80013a6 <__swbuf_r+0x42>
 800139c:	4621      	mov	r1, r4
 800139e:	4628      	mov	r0, r5
 80013a0:	f000 f94c 	bl	800163c <_fflush_r>
 80013a4:	bb30      	cbnz	r0, 80013f4 <__swbuf_r+0x90>
 80013a6:	68a3      	ldr	r3, [r4, #8]
 80013a8:	3b01      	subs	r3, #1
 80013aa:	60a3      	str	r3, [r4, #8]
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	1c5a      	adds	r2, r3, #1
 80013b0:	6022      	str	r2, [r4, #0]
 80013b2:	701e      	strb	r6, [r3, #0]
 80013b4:	6963      	ldr	r3, [r4, #20]
 80013b6:	3001      	adds	r0, #1
 80013b8:	4283      	cmp	r3, r0
 80013ba:	d004      	beq.n	80013c6 <__swbuf_r+0x62>
 80013bc:	89a3      	ldrh	r3, [r4, #12]
 80013be:	07db      	lsls	r3, r3, #31
 80013c0:	d506      	bpl.n	80013d0 <__swbuf_r+0x6c>
 80013c2:	2e0a      	cmp	r6, #10
 80013c4:	d104      	bne.n	80013d0 <__swbuf_r+0x6c>
 80013c6:	4621      	mov	r1, r4
 80013c8:	4628      	mov	r0, r5
 80013ca:	f000 f937 	bl	800163c <_fflush_r>
 80013ce:	b988      	cbnz	r0, 80013f4 <__swbuf_r+0x90>
 80013d0:	4638      	mov	r0, r7
 80013d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013d4:	4b0a      	ldr	r3, [pc, #40]	; (8001400 <__swbuf_r+0x9c>)
 80013d6:	429c      	cmp	r4, r3
 80013d8:	d101      	bne.n	80013de <__swbuf_r+0x7a>
 80013da:	68ac      	ldr	r4, [r5, #8]
 80013dc:	e7cf      	b.n	800137e <__swbuf_r+0x1a>
 80013de:	4b09      	ldr	r3, [pc, #36]	; (8001404 <__swbuf_r+0xa0>)
 80013e0:	429c      	cmp	r4, r3
 80013e2:	bf08      	it	eq
 80013e4:	68ec      	ldreq	r4, [r5, #12]
 80013e6:	e7ca      	b.n	800137e <__swbuf_r+0x1a>
 80013e8:	4621      	mov	r1, r4
 80013ea:	4628      	mov	r0, r5
 80013ec:	f000 f81e 	bl	800142c <__swsetup_r>
 80013f0:	2800      	cmp	r0, #0
 80013f2:	d0cb      	beq.n	800138c <__swbuf_r+0x28>
 80013f4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80013f8:	e7ea      	b.n	80013d0 <__swbuf_r+0x6c>
 80013fa:	bf00      	nop
 80013fc:	080019f4 	.word	0x080019f4
 8001400:	08001a14 	.word	0x08001a14
 8001404:	080019d4 	.word	0x080019d4

08001408 <_write_r>:
 8001408:	b538      	push	{r3, r4, r5, lr}
 800140a:	4d07      	ldr	r5, [pc, #28]	; (8001428 <_write_r+0x20>)
 800140c:	4604      	mov	r4, r0
 800140e:	4608      	mov	r0, r1
 8001410:	4611      	mov	r1, r2
 8001412:	2200      	movs	r2, #0
 8001414:	602a      	str	r2, [r5, #0]
 8001416:	461a      	mov	r2, r3
 8001418:	f7ff f8c6 	bl	80005a8 <_write>
 800141c:	1c43      	adds	r3, r0, #1
 800141e:	d102      	bne.n	8001426 <_write_r+0x1e>
 8001420:	682b      	ldr	r3, [r5, #0]
 8001422:	b103      	cbz	r3, 8001426 <_write_r+0x1e>
 8001424:	6023      	str	r3, [r4, #0]
 8001426:	bd38      	pop	{r3, r4, r5, pc}
 8001428:	200000d8 	.word	0x200000d8

0800142c <__swsetup_r>:
 800142c:	4b32      	ldr	r3, [pc, #200]	; (80014f8 <__swsetup_r+0xcc>)
 800142e:	b570      	push	{r4, r5, r6, lr}
 8001430:	681d      	ldr	r5, [r3, #0]
 8001432:	4606      	mov	r6, r0
 8001434:	460c      	mov	r4, r1
 8001436:	b125      	cbz	r5, 8001442 <__swsetup_r+0x16>
 8001438:	69ab      	ldr	r3, [r5, #24]
 800143a:	b913      	cbnz	r3, 8001442 <__swsetup_r+0x16>
 800143c:	4628      	mov	r0, r5
 800143e:	f7ff fa71 	bl	8000924 <__sinit>
 8001442:	4b2e      	ldr	r3, [pc, #184]	; (80014fc <__swsetup_r+0xd0>)
 8001444:	429c      	cmp	r4, r3
 8001446:	d10f      	bne.n	8001468 <__swsetup_r+0x3c>
 8001448:	686c      	ldr	r4, [r5, #4]
 800144a:	89a3      	ldrh	r3, [r4, #12]
 800144c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001450:	0719      	lsls	r1, r3, #28
 8001452:	d42c      	bmi.n	80014ae <__swsetup_r+0x82>
 8001454:	06dd      	lsls	r5, r3, #27
 8001456:	d411      	bmi.n	800147c <__swsetup_r+0x50>
 8001458:	2309      	movs	r3, #9
 800145a:	6033      	str	r3, [r6, #0]
 800145c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001460:	81a3      	strh	r3, [r4, #12]
 8001462:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001466:	e03e      	b.n	80014e6 <__swsetup_r+0xba>
 8001468:	4b25      	ldr	r3, [pc, #148]	; (8001500 <__swsetup_r+0xd4>)
 800146a:	429c      	cmp	r4, r3
 800146c:	d101      	bne.n	8001472 <__swsetup_r+0x46>
 800146e:	68ac      	ldr	r4, [r5, #8]
 8001470:	e7eb      	b.n	800144a <__swsetup_r+0x1e>
 8001472:	4b24      	ldr	r3, [pc, #144]	; (8001504 <__swsetup_r+0xd8>)
 8001474:	429c      	cmp	r4, r3
 8001476:	bf08      	it	eq
 8001478:	68ec      	ldreq	r4, [r5, #12]
 800147a:	e7e6      	b.n	800144a <__swsetup_r+0x1e>
 800147c:	0758      	lsls	r0, r3, #29
 800147e:	d512      	bpl.n	80014a6 <__swsetup_r+0x7a>
 8001480:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001482:	b141      	cbz	r1, 8001496 <__swsetup_r+0x6a>
 8001484:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001488:	4299      	cmp	r1, r3
 800148a:	d002      	beq.n	8001492 <__swsetup_r+0x66>
 800148c:	4630      	mov	r0, r6
 800148e:	f7ff fb03 	bl	8000a98 <_free_r>
 8001492:	2300      	movs	r3, #0
 8001494:	6363      	str	r3, [r4, #52]	; 0x34
 8001496:	89a3      	ldrh	r3, [r4, #12]
 8001498:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800149c:	81a3      	strh	r3, [r4, #12]
 800149e:	2300      	movs	r3, #0
 80014a0:	6063      	str	r3, [r4, #4]
 80014a2:	6923      	ldr	r3, [r4, #16]
 80014a4:	6023      	str	r3, [r4, #0]
 80014a6:	89a3      	ldrh	r3, [r4, #12]
 80014a8:	f043 0308 	orr.w	r3, r3, #8
 80014ac:	81a3      	strh	r3, [r4, #12]
 80014ae:	6923      	ldr	r3, [r4, #16]
 80014b0:	b94b      	cbnz	r3, 80014c6 <__swsetup_r+0x9a>
 80014b2:	89a3      	ldrh	r3, [r4, #12]
 80014b4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80014b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80014bc:	d003      	beq.n	80014c6 <__swsetup_r+0x9a>
 80014be:	4621      	mov	r1, r4
 80014c0:	4630      	mov	r0, r6
 80014c2:	f000 f92f 	bl	8001724 <__smakebuf_r>
 80014c6:	89a0      	ldrh	r0, [r4, #12]
 80014c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80014cc:	f010 0301 	ands.w	r3, r0, #1
 80014d0:	d00a      	beq.n	80014e8 <__swsetup_r+0xbc>
 80014d2:	2300      	movs	r3, #0
 80014d4:	60a3      	str	r3, [r4, #8]
 80014d6:	6963      	ldr	r3, [r4, #20]
 80014d8:	425b      	negs	r3, r3
 80014da:	61a3      	str	r3, [r4, #24]
 80014dc:	6923      	ldr	r3, [r4, #16]
 80014de:	b943      	cbnz	r3, 80014f2 <__swsetup_r+0xc6>
 80014e0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80014e4:	d1ba      	bne.n	800145c <__swsetup_r+0x30>
 80014e6:	bd70      	pop	{r4, r5, r6, pc}
 80014e8:	0781      	lsls	r1, r0, #30
 80014ea:	bf58      	it	pl
 80014ec:	6963      	ldrpl	r3, [r4, #20]
 80014ee:	60a3      	str	r3, [r4, #8]
 80014f0:	e7f4      	b.n	80014dc <__swsetup_r+0xb0>
 80014f2:	2000      	movs	r0, #0
 80014f4:	e7f7      	b.n	80014e6 <__swsetup_r+0xba>
 80014f6:	bf00      	nop
 80014f8:	20000048 	.word	0x20000048
 80014fc:	080019f4 	.word	0x080019f4
 8001500:	08001a14 	.word	0x08001a14
 8001504:	080019d4 	.word	0x080019d4

08001508 <abort>:
 8001508:	b508      	push	{r3, lr}
 800150a:	2006      	movs	r0, #6
 800150c:	f000 f990 	bl	8001830 <raise>
 8001510:	2001      	movs	r0, #1
 8001512:	f7ff f822 	bl	800055a <_exit>
	...

08001518 <_close_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	4d06      	ldr	r5, [pc, #24]	; (8001534 <_close_r+0x1c>)
 800151c:	2300      	movs	r3, #0
 800151e:	4604      	mov	r4, r0
 8001520:	4608      	mov	r0, r1
 8001522:	602b      	str	r3, [r5, #0]
 8001524:	f7ff f85c 	bl	80005e0 <_close>
 8001528:	1c43      	adds	r3, r0, #1
 800152a:	d102      	bne.n	8001532 <_close_r+0x1a>
 800152c:	682b      	ldr	r3, [r5, #0]
 800152e:	b103      	cbz	r3, 8001532 <_close_r+0x1a>
 8001530:	6023      	str	r3, [r4, #0]
 8001532:	bd38      	pop	{r3, r4, r5, pc}
 8001534:	200000d8 	.word	0x200000d8

08001538 <__sflush_r>:
 8001538:	898a      	ldrh	r2, [r1, #12]
 800153a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800153c:	4605      	mov	r5, r0
 800153e:	0710      	lsls	r0, r2, #28
 8001540:	460c      	mov	r4, r1
 8001542:	d457      	bmi.n	80015f4 <__sflush_r+0xbc>
 8001544:	684b      	ldr	r3, [r1, #4]
 8001546:	2b00      	cmp	r3, #0
 8001548:	dc04      	bgt.n	8001554 <__sflush_r+0x1c>
 800154a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800154c:	2b00      	cmp	r3, #0
 800154e:	dc01      	bgt.n	8001554 <__sflush_r+0x1c>
 8001550:	2000      	movs	r0, #0
 8001552:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001554:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001556:	2e00      	cmp	r6, #0
 8001558:	d0fa      	beq.n	8001550 <__sflush_r+0x18>
 800155a:	2300      	movs	r3, #0
 800155c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001560:	682f      	ldr	r7, [r5, #0]
 8001562:	602b      	str	r3, [r5, #0]
 8001564:	d032      	beq.n	80015cc <__sflush_r+0x94>
 8001566:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001568:	89a3      	ldrh	r3, [r4, #12]
 800156a:	075a      	lsls	r2, r3, #29
 800156c:	d505      	bpl.n	800157a <__sflush_r+0x42>
 800156e:	6863      	ldr	r3, [r4, #4]
 8001570:	1ac0      	subs	r0, r0, r3
 8001572:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001574:	b10b      	cbz	r3, 800157a <__sflush_r+0x42>
 8001576:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001578:	1ac0      	subs	r0, r0, r3
 800157a:	2300      	movs	r3, #0
 800157c:	4602      	mov	r2, r0
 800157e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001580:	6a21      	ldr	r1, [r4, #32]
 8001582:	4628      	mov	r0, r5
 8001584:	47b0      	blx	r6
 8001586:	1c43      	adds	r3, r0, #1
 8001588:	89a3      	ldrh	r3, [r4, #12]
 800158a:	d106      	bne.n	800159a <__sflush_r+0x62>
 800158c:	6829      	ldr	r1, [r5, #0]
 800158e:	291d      	cmp	r1, #29
 8001590:	d82c      	bhi.n	80015ec <__sflush_r+0xb4>
 8001592:	4a29      	ldr	r2, [pc, #164]	; (8001638 <__sflush_r+0x100>)
 8001594:	40ca      	lsrs	r2, r1
 8001596:	07d6      	lsls	r6, r2, #31
 8001598:	d528      	bpl.n	80015ec <__sflush_r+0xb4>
 800159a:	2200      	movs	r2, #0
 800159c:	6062      	str	r2, [r4, #4]
 800159e:	04d9      	lsls	r1, r3, #19
 80015a0:	6922      	ldr	r2, [r4, #16]
 80015a2:	6022      	str	r2, [r4, #0]
 80015a4:	d504      	bpl.n	80015b0 <__sflush_r+0x78>
 80015a6:	1c42      	adds	r2, r0, #1
 80015a8:	d101      	bne.n	80015ae <__sflush_r+0x76>
 80015aa:	682b      	ldr	r3, [r5, #0]
 80015ac:	b903      	cbnz	r3, 80015b0 <__sflush_r+0x78>
 80015ae:	6560      	str	r0, [r4, #84]	; 0x54
 80015b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80015b2:	602f      	str	r7, [r5, #0]
 80015b4:	2900      	cmp	r1, #0
 80015b6:	d0cb      	beq.n	8001550 <__sflush_r+0x18>
 80015b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80015bc:	4299      	cmp	r1, r3
 80015be:	d002      	beq.n	80015c6 <__sflush_r+0x8e>
 80015c0:	4628      	mov	r0, r5
 80015c2:	f7ff fa69 	bl	8000a98 <_free_r>
 80015c6:	2000      	movs	r0, #0
 80015c8:	6360      	str	r0, [r4, #52]	; 0x34
 80015ca:	e7c2      	b.n	8001552 <__sflush_r+0x1a>
 80015cc:	6a21      	ldr	r1, [r4, #32]
 80015ce:	2301      	movs	r3, #1
 80015d0:	4628      	mov	r0, r5
 80015d2:	47b0      	blx	r6
 80015d4:	1c41      	adds	r1, r0, #1
 80015d6:	d1c7      	bne.n	8001568 <__sflush_r+0x30>
 80015d8:	682b      	ldr	r3, [r5, #0]
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d0c4      	beq.n	8001568 <__sflush_r+0x30>
 80015de:	2b1d      	cmp	r3, #29
 80015e0:	d001      	beq.n	80015e6 <__sflush_r+0xae>
 80015e2:	2b16      	cmp	r3, #22
 80015e4:	d101      	bne.n	80015ea <__sflush_r+0xb2>
 80015e6:	602f      	str	r7, [r5, #0]
 80015e8:	e7b2      	b.n	8001550 <__sflush_r+0x18>
 80015ea:	89a3      	ldrh	r3, [r4, #12]
 80015ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015f0:	81a3      	strh	r3, [r4, #12]
 80015f2:	e7ae      	b.n	8001552 <__sflush_r+0x1a>
 80015f4:	690f      	ldr	r7, [r1, #16]
 80015f6:	2f00      	cmp	r7, #0
 80015f8:	d0aa      	beq.n	8001550 <__sflush_r+0x18>
 80015fa:	0793      	lsls	r3, r2, #30
 80015fc:	680e      	ldr	r6, [r1, #0]
 80015fe:	bf08      	it	eq
 8001600:	694b      	ldreq	r3, [r1, #20]
 8001602:	600f      	str	r7, [r1, #0]
 8001604:	bf18      	it	ne
 8001606:	2300      	movne	r3, #0
 8001608:	1bf6      	subs	r6, r6, r7
 800160a:	608b      	str	r3, [r1, #8]
 800160c:	2e00      	cmp	r6, #0
 800160e:	dd9f      	ble.n	8001550 <__sflush_r+0x18>
 8001610:	6a21      	ldr	r1, [r4, #32]
 8001612:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001616:	4633      	mov	r3, r6
 8001618:	463a      	mov	r2, r7
 800161a:	4628      	mov	r0, r5
 800161c:	47e0      	blx	ip
 800161e:	2800      	cmp	r0, #0
 8001620:	dc06      	bgt.n	8001630 <__sflush_r+0xf8>
 8001622:	89a3      	ldrh	r3, [r4, #12]
 8001624:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001628:	81a3      	strh	r3, [r4, #12]
 800162a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800162e:	e790      	b.n	8001552 <__sflush_r+0x1a>
 8001630:	4407      	add	r7, r0
 8001632:	1a36      	subs	r6, r6, r0
 8001634:	e7ea      	b.n	800160c <__sflush_r+0xd4>
 8001636:	bf00      	nop
 8001638:	20400001 	.word	0x20400001

0800163c <_fflush_r>:
 800163c:	b538      	push	{r3, r4, r5, lr}
 800163e:	690b      	ldr	r3, [r1, #16]
 8001640:	4605      	mov	r5, r0
 8001642:	460c      	mov	r4, r1
 8001644:	b913      	cbnz	r3, 800164c <_fflush_r+0x10>
 8001646:	2500      	movs	r5, #0
 8001648:	4628      	mov	r0, r5
 800164a:	bd38      	pop	{r3, r4, r5, pc}
 800164c:	b118      	cbz	r0, 8001656 <_fflush_r+0x1a>
 800164e:	6983      	ldr	r3, [r0, #24]
 8001650:	b90b      	cbnz	r3, 8001656 <_fflush_r+0x1a>
 8001652:	f7ff f967 	bl	8000924 <__sinit>
 8001656:	4b14      	ldr	r3, [pc, #80]	; (80016a8 <_fflush_r+0x6c>)
 8001658:	429c      	cmp	r4, r3
 800165a:	d11b      	bne.n	8001694 <_fflush_r+0x58>
 800165c:	686c      	ldr	r4, [r5, #4]
 800165e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001662:	2b00      	cmp	r3, #0
 8001664:	d0ef      	beq.n	8001646 <_fflush_r+0xa>
 8001666:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001668:	07d0      	lsls	r0, r2, #31
 800166a:	d404      	bmi.n	8001676 <_fflush_r+0x3a>
 800166c:	0599      	lsls	r1, r3, #22
 800166e:	d402      	bmi.n	8001676 <_fflush_r+0x3a>
 8001670:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001672:	f7ff fa07 	bl	8000a84 <__retarget_lock_acquire_recursive>
 8001676:	4628      	mov	r0, r5
 8001678:	4621      	mov	r1, r4
 800167a:	f7ff ff5d 	bl	8001538 <__sflush_r>
 800167e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001680:	07da      	lsls	r2, r3, #31
 8001682:	4605      	mov	r5, r0
 8001684:	d4e0      	bmi.n	8001648 <_fflush_r+0xc>
 8001686:	89a3      	ldrh	r3, [r4, #12]
 8001688:	059b      	lsls	r3, r3, #22
 800168a:	d4dd      	bmi.n	8001648 <_fflush_r+0xc>
 800168c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800168e:	f7ff f9fa 	bl	8000a86 <__retarget_lock_release_recursive>
 8001692:	e7d9      	b.n	8001648 <_fflush_r+0xc>
 8001694:	4b05      	ldr	r3, [pc, #20]	; (80016ac <_fflush_r+0x70>)
 8001696:	429c      	cmp	r4, r3
 8001698:	d101      	bne.n	800169e <_fflush_r+0x62>
 800169a:	68ac      	ldr	r4, [r5, #8]
 800169c:	e7df      	b.n	800165e <_fflush_r+0x22>
 800169e:	4b04      	ldr	r3, [pc, #16]	; (80016b0 <_fflush_r+0x74>)
 80016a0:	429c      	cmp	r4, r3
 80016a2:	bf08      	it	eq
 80016a4:	68ec      	ldreq	r4, [r5, #12]
 80016a6:	e7da      	b.n	800165e <_fflush_r+0x22>
 80016a8:	080019f4 	.word	0x080019f4
 80016ac:	08001a14 	.word	0x08001a14
 80016b0:	080019d4 	.word	0x080019d4

080016b4 <_lseek_r>:
 80016b4:	b538      	push	{r3, r4, r5, lr}
 80016b6:	4d07      	ldr	r5, [pc, #28]	; (80016d4 <_lseek_r+0x20>)
 80016b8:	4604      	mov	r4, r0
 80016ba:	4608      	mov	r0, r1
 80016bc:	4611      	mov	r1, r2
 80016be:	2200      	movs	r2, #0
 80016c0:	602a      	str	r2, [r5, #0]
 80016c2:	461a      	mov	r2, r3
 80016c4:	f7fe ffb0 	bl	8000628 <_lseek>
 80016c8:	1c43      	adds	r3, r0, #1
 80016ca:	d102      	bne.n	80016d2 <_lseek_r+0x1e>
 80016cc:	682b      	ldr	r3, [r5, #0]
 80016ce:	b103      	cbz	r3, 80016d2 <_lseek_r+0x1e>
 80016d0:	6023      	str	r3, [r4, #0]
 80016d2:	bd38      	pop	{r3, r4, r5, pc}
 80016d4:	200000d8 	.word	0x200000d8

080016d8 <__swhatbuf_r>:
 80016d8:	b570      	push	{r4, r5, r6, lr}
 80016da:	460e      	mov	r6, r1
 80016dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016e0:	2900      	cmp	r1, #0
 80016e2:	b096      	sub	sp, #88	; 0x58
 80016e4:	4614      	mov	r4, r2
 80016e6:	461d      	mov	r5, r3
 80016e8:	da08      	bge.n	80016fc <__swhatbuf_r+0x24>
 80016ea:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80016ee:	2200      	movs	r2, #0
 80016f0:	602a      	str	r2, [r5, #0]
 80016f2:	061a      	lsls	r2, r3, #24
 80016f4:	d410      	bmi.n	8001718 <__swhatbuf_r+0x40>
 80016f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016fa:	e00e      	b.n	800171a <__swhatbuf_r+0x42>
 80016fc:	466a      	mov	r2, sp
 80016fe:	f000 f8b3 	bl	8001868 <_fstat_r>
 8001702:	2800      	cmp	r0, #0
 8001704:	dbf1      	blt.n	80016ea <__swhatbuf_r+0x12>
 8001706:	9a01      	ldr	r2, [sp, #4]
 8001708:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800170c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001710:	425a      	negs	r2, r3
 8001712:	415a      	adcs	r2, r3
 8001714:	602a      	str	r2, [r5, #0]
 8001716:	e7ee      	b.n	80016f6 <__swhatbuf_r+0x1e>
 8001718:	2340      	movs	r3, #64	; 0x40
 800171a:	2000      	movs	r0, #0
 800171c:	6023      	str	r3, [r4, #0]
 800171e:	b016      	add	sp, #88	; 0x58
 8001720:	bd70      	pop	{r4, r5, r6, pc}
	...

08001724 <__smakebuf_r>:
 8001724:	898b      	ldrh	r3, [r1, #12]
 8001726:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001728:	079d      	lsls	r5, r3, #30
 800172a:	4606      	mov	r6, r0
 800172c:	460c      	mov	r4, r1
 800172e:	d507      	bpl.n	8001740 <__smakebuf_r+0x1c>
 8001730:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001734:	6023      	str	r3, [r4, #0]
 8001736:	6123      	str	r3, [r4, #16]
 8001738:	2301      	movs	r3, #1
 800173a:	6163      	str	r3, [r4, #20]
 800173c:	b002      	add	sp, #8
 800173e:	bd70      	pop	{r4, r5, r6, pc}
 8001740:	ab01      	add	r3, sp, #4
 8001742:	466a      	mov	r2, sp
 8001744:	f7ff ffc8 	bl	80016d8 <__swhatbuf_r>
 8001748:	9900      	ldr	r1, [sp, #0]
 800174a:	4605      	mov	r5, r0
 800174c:	4630      	mov	r0, r6
 800174e:	f7ff fa0d 	bl	8000b6c <_malloc_r>
 8001752:	b948      	cbnz	r0, 8001768 <__smakebuf_r+0x44>
 8001754:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001758:	059a      	lsls	r2, r3, #22
 800175a:	d4ef      	bmi.n	800173c <__smakebuf_r+0x18>
 800175c:	f023 0303 	bic.w	r3, r3, #3
 8001760:	f043 0302 	orr.w	r3, r3, #2
 8001764:	81a3      	strh	r3, [r4, #12]
 8001766:	e7e3      	b.n	8001730 <__smakebuf_r+0xc>
 8001768:	4b0d      	ldr	r3, [pc, #52]	; (80017a0 <__smakebuf_r+0x7c>)
 800176a:	62b3      	str	r3, [r6, #40]	; 0x28
 800176c:	89a3      	ldrh	r3, [r4, #12]
 800176e:	6020      	str	r0, [r4, #0]
 8001770:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001774:	81a3      	strh	r3, [r4, #12]
 8001776:	9b00      	ldr	r3, [sp, #0]
 8001778:	6163      	str	r3, [r4, #20]
 800177a:	9b01      	ldr	r3, [sp, #4]
 800177c:	6120      	str	r0, [r4, #16]
 800177e:	b15b      	cbz	r3, 8001798 <__smakebuf_r+0x74>
 8001780:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001784:	4630      	mov	r0, r6
 8001786:	f000 f881 	bl	800188c <_isatty_r>
 800178a:	b128      	cbz	r0, 8001798 <__smakebuf_r+0x74>
 800178c:	89a3      	ldrh	r3, [r4, #12]
 800178e:	f023 0303 	bic.w	r3, r3, #3
 8001792:	f043 0301 	orr.w	r3, r3, #1
 8001796:	81a3      	strh	r3, [r4, #12]
 8001798:	89a0      	ldrh	r0, [r4, #12]
 800179a:	4305      	orrs	r5, r0
 800179c:	81a5      	strh	r5, [r4, #12]
 800179e:	e7cd      	b.n	800173c <__smakebuf_r+0x18>
 80017a0:	080008bd 	.word	0x080008bd

080017a4 <__malloc_lock>:
 80017a4:	4801      	ldr	r0, [pc, #4]	; (80017ac <__malloc_lock+0x8>)
 80017a6:	f7ff b96d 	b.w	8000a84 <__retarget_lock_acquire_recursive>
 80017aa:	bf00      	nop
 80017ac:	200000cc 	.word	0x200000cc

080017b0 <__malloc_unlock>:
 80017b0:	4801      	ldr	r0, [pc, #4]	; (80017b8 <__malloc_unlock+0x8>)
 80017b2:	f7ff b968 	b.w	8000a86 <__retarget_lock_release_recursive>
 80017b6:	bf00      	nop
 80017b8:	200000cc 	.word	0x200000cc

080017bc <_read_r>:
 80017bc:	b538      	push	{r3, r4, r5, lr}
 80017be:	4d07      	ldr	r5, [pc, #28]	; (80017dc <_read_r+0x20>)
 80017c0:	4604      	mov	r4, r0
 80017c2:	4608      	mov	r0, r1
 80017c4:	4611      	mov	r1, r2
 80017c6:	2200      	movs	r2, #0
 80017c8:	602a      	str	r2, [r5, #0]
 80017ca:	461a      	mov	r2, r3
 80017cc:	f7fe fecf 	bl	800056e <_read>
 80017d0:	1c43      	adds	r3, r0, #1
 80017d2:	d102      	bne.n	80017da <_read_r+0x1e>
 80017d4:	682b      	ldr	r3, [r5, #0]
 80017d6:	b103      	cbz	r3, 80017da <_read_r+0x1e>
 80017d8:	6023      	str	r3, [r4, #0]
 80017da:	bd38      	pop	{r3, r4, r5, pc}
 80017dc:	200000d8 	.word	0x200000d8

080017e0 <_raise_r>:
 80017e0:	291f      	cmp	r1, #31
 80017e2:	b538      	push	{r3, r4, r5, lr}
 80017e4:	4604      	mov	r4, r0
 80017e6:	460d      	mov	r5, r1
 80017e8:	d904      	bls.n	80017f4 <_raise_r+0x14>
 80017ea:	2316      	movs	r3, #22
 80017ec:	6003      	str	r3, [r0, #0]
 80017ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80017f2:	bd38      	pop	{r3, r4, r5, pc}
 80017f4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80017f6:	b112      	cbz	r2, 80017fe <_raise_r+0x1e>
 80017f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80017fc:	b94b      	cbnz	r3, 8001812 <_raise_r+0x32>
 80017fe:	4620      	mov	r0, r4
 8001800:	f000 f830 	bl	8001864 <_getpid_r>
 8001804:	462a      	mov	r2, r5
 8001806:	4601      	mov	r1, r0
 8001808:	4620      	mov	r0, r4
 800180a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800180e:	f000 b817 	b.w	8001840 <_kill_r>
 8001812:	2b01      	cmp	r3, #1
 8001814:	d00a      	beq.n	800182c <_raise_r+0x4c>
 8001816:	1c59      	adds	r1, r3, #1
 8001818:	d103      	bne.n	8001822 <_raise_r+0x42>
 800181a:	2316      	movs	r3, #22
 800181c:	6003      	str	r3, [r0, #0]
 800181e:	2001      	movs	r0, #1
 8001820:	e7e7      	b.n	80017f2 <_raise_r+0x12>
 8001822:	2400      	movs	r4, #0
 8001824:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001828:	4628      	mov	r0, r5
 800182a:	4798      	blx	r3
 800182c:	2000      	movs	r0, #0
 800182e:	e7e0      	b.n	80017f2 <_raise_r+0x12>

08001830 <raise>:
 8001830:	4b02      	ldr	r3, [pc, #8]	; (800183c <raise+0xc>)
 8001832:	4601      	mov	r1, r0
 8001834:	6818      	ldr	r0, [r3, #0]
 8001836:	f7ff bfd3 	b.w	80017e0 <_raise_r>
 800183a:	bf00      	nop
 800183c:	20000048 	.word	0x20000048

08001840 <_kill_r>:
 8001840:	b538      	push	{r3, r4, r5, lr}
 8001842:	4d07      	ldr	r5, [pc, #28]	; (8001860 <_kill_r+0x20>)
 8001844:	2300      	movs	r3, #0
 8001846:	4604      	mov	r4, r0
 8001848:	4608      	mov	r0, r1
 800184a:	4611      	mov	r1, r2
 800184c:	602b      	str	r3, [r5, #0]
 800184e:	f7fe fe74 	bl	800053a <_kill>
 8001852:	1c43      	adds	r3, r0, #1
 8001854:	d102      	bne.n	800185c <_kill_r+0x1c>
 8001856:	682b      	ldr	r3, [r5, #0]
 8001858:	b103      	cbz	r3, 800185c <_kill_r+0x1c>
 800185a:	6023      	str	r3, [r4, #0]
 800185c:	bd38      	pop	{r3, r4, r5, pc}
 800185e:	bf00      	nop
 8001860:	200000d8 	.word	0x200000d8

08001864 <_getpid_r>:
 8001864:	f7fe be62 	b.w	800052c <_getpid>

08001868 <_fstat_r>:
 8001868:	b538      	push	{r3, r4, r5, lr}
 800186a:	4d07      	ldr	r5, [pc, #28]	; (8001888 <_fstat_r+0x20>)
 800186c:	2300      	movs	r3, #0
 800186e:	4604      	mov	r4, r0
 8001870:	4608      	mov	r0, r1
 8001872:	4611      	mov	r1, r2
 8001874:	602b      	str	r3, [r5, #0]
 8001876:	f7fe febe 	bl	80005f6 <_fstat>
 800187a:	1c43      	adds	r3, r0, #1
 800187c:	d102      	bne.n	8001884 <_fstat_r+0x1c>
 800187e:	682b      	ldr	r3, [r5, #0]
 8001880:	b103      	cbz	r3, 8001884 <_fstat_r+0x1c>
 8001882:	6023      	str	r3, [r4, #0]
 8001884:	bd38      	pop	{r3, r4, r5, pc}
 8001886:	bf00      	nop
 8001888:	200000d8 	.word	0x200000d8

0800188c <_isatty_r>:
 800188c:	b538      	push	{r3, r4, r5, lr}
 800188e:	4d06      	ldr	r5, [pc, #24]	; (80018a8 <_isatty_r+0x1c>)
 8001890:	2300      	movs	r3, #0
 8001892:	4604      	mov	r4, r0
 8001894:	4608      	mov	r0, r1
 8001896:	602b      	str	r3, [r5, #0]
 8001898:	f7fe febc 	bl	8000614 <_isatty>
 800189c:	1c43      	adds	r3, r0, #1
 800189e:	d102      	bne.n	80018a6 <_isatty_r+0x1a>
 80018a0:	682b      	ldr	r3, [r5, #0]
 80018a2:	b103      	cbz	r3, 80018a6 <_isatty_r+0x1a>
 80018a4:	6023      	str	r3, [r4, #0]
 80018a6:	bd38      	pop	{r3, r4, r5, pc}
 80018a8:	200000d8 	.word	0x200000d8

080018ac <_init>:
 80018ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018ae:	bf00      	nop
 80018b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80018b2:	bc08      	pop	{r3}
 80018b4:	469e      	mov	lr, r3
 80018b6:	4770      	bx	lr

080018b8 <_fini>:
 80018b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018ba:	bf00      	nop
 80018bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80018be:	bc08      	pop	{r3}
 80018c0:	469e      	mov	lr, r3
 80018c2:	4770      	bx	lr
