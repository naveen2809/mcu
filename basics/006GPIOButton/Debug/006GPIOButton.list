
006GPIOButton.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001cc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000374  0800037c  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000374  08000374  0001037c  2**0
                  CONTENTS
  4 .ARM          00000000  08000374  08000374  0001037c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000374  0800037c  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000374  08000374  00010374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000378  08000378  00010378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001037c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001037c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0001037c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000154  00000000  00000000  000103a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000b1  00000000  00000000  000104fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000050  00000000  00000000  000105b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000038  00000000  00000000  00010600  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000f6a  00000000  00000000  00010638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000045c  00000000  00000000  000115a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003bfe  00000000  00000000  000119fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000155fc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000084  00000000  00000000  0001564c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800035c 	.word	0x0800035c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800035c 	.word	0x0800035c

080001e8 <delay>:
#define GPIO_PIN_NUM_OUTPUT				12
#define SLEEP_COUNT						500000
#define ENABLE							1

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	uint32_t j;
	for(j=0;j<SLEEP_COUNT;j++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	bc80      	pop	{r7}
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b088      	sub	sp, #32
 8000218:	af00      	add	r7, sp, #0

	uint32_t *pAHB1ENR = (uint32_t *) AHB1_ENR_ADDR;
 800021a:	4b24      	ldr	r3, [pc, #144]	; (80002ac <main+0x98>)
 800021c:	61fb      	str	r3, [r7, #28]
	uint32_t *pGPIOA_MODER = (uint32_t *) GPIOA_MODER_ADDR;
 800021e:	4b24      	ldr	r3, [pc, #144]	; (80002b0 <main+0x9c>)
 8000220:	61bb      	str	r3, [r7, #24]
	uint32_t *pGPIOA_IDR = (uint32_t *) GPIOA_IDR_ADDR;
 8000222:	4b24      	ldr	r3, [pc, #144]	; (80002b4 <main+0xa0>)
 8000224:	617b      	str	r3, [r7, #20]
	uint32_t *pGPIOD_MODER = (uint32_t *) GPIOD_MODER_ADDR;
 8000226:	4b24      	ldr	r3, [pc, #144]	; (80002b8 <main+0xa4>)
 8000228:	613b      	str	r3, [r7, #16]
	uint32_t *pGPIOD_ODR = (uint32_t *) GPIOD_ODR_ADDR;
 800022a:	4b24      	ldr	r3, [pc, #144]	; (80002bc <main+0xa8>)
 800022c:	60fb      	str	r3, [r7, #12]



	// Enable the peripheral clock for GPIO Port A

	*pAHB1ENR |= (1 << GPIO_PORT_INPUT);
 800022e:	69fb      	ldr	r3, [r7, #28]
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	f043 0201 	orr.w	r2, r3, #1
 8000236:	69fb      	ldr	r3, [r7, #28]
 8000238:	601a      	str	r2, [r3, #0]

	// Configuring the GPIO Setting for GPIO Port A, Pin A0

	*pGPIOA_MODER &= ~(0x03 << 2*GPIO_PIN_NUM_INPUT);
 800023a:	69bb      	ldr	r3, [r7, #24]
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f023 0203 	bic.w	r2, r3, #3
 8000242:	69bb      	ldr	r3, [r7, #24]
 8000244:	601a      	str	r2, [r3, #0]
	*pGPIOA_MODER |= (0x00 << 2*GPIO_PIN_NUM_INPUT);
 8000246:	69bb      	ldr	r3, [r7, #24]
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	69bb      	ldr	r3, [r7, #24]
 800024c:	601a      	str	r2, [r3, #0]


	//1. Enable peripheral clock for GPIOD peripheral by writing to AHB1ENR

	*pAHB1ENR |= (1 << GPIO_PORT_OUTPUT);
 800024e:	69fb      	ldr	r3, [r7, #28]
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	f043 0208 	orr.w	r2, r3, #8
 8000256:	69fb      	ldr	r3, [r7, #28]
 8000258:	601a      	str	r2, [r3, #0]

		//2. Set of the mode of GPIOD, Pin 12 as output by writing to GPIOD_MODER

	*pGPIOD_MODER |= (1 << 2*GPIO_PIN_NUM_OUTPUT);
 800025a:	693b      	ldr	r3, [r7, #16]
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8000262:	693b      	ldr	r3, [r7, #16]
 8000264:	601a      	str	r2, [r3, #0]

	for(;;)
	{
		input_value = ((*pGPIOA_IDR >> GPIO_PIN_NUM_INPUT) & 0x1);
 8000266:	697b      	ldr	r3, [r7, #20]
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f003 0301 	and.w	r3, r3, #1
 800026e:	60bb      	str	r3, [r7, #8]


		if(input_value == ENABLE)
 8000270:	68bb      	ldr	r3, [r7, #8]
 8000272:	2b01      	cmp	r3, #1
 8000274:	d1f7      	bne.n	8000266 <main+0x52>
		{
			current_value = ((*pGPIOD_ODR >> GPIO_PIN_NUM_OUTPUT) & 0x1);
 8000276:	68fb      	ldr	r3, [r7, #12]
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	0b1b      	lsrs	r3, r3, #12
 800027c:	f003 0301 	and.w	r3, r3, #1
 8000280:	607b      	str	r3, [r7, #4]
			current_value ^= 0x1;
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	f083 0301 	eor.w	r3, r3, #1
 8000288:	607b      	str	r3, [r7, #4]
			*pGPIOD_ODR &= ~(1 << GPIO_PIN_NUM_OUTPUT);
 800028a:	68fb      	ldr	r3, [r7, #12]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	601a      	str	r2, [r3, #0]
			*pGPIOD_ODR |= (current_value << GPIO_PIN_NUM_OUTPUT);
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	031b      	lsls	r3, r3, #12
 800029e:	431a      	orrs	r2, r3
 80002a0:	68fb      	ldr	r3, [r7, #12]
 80002a2:	601a      	str	r2, [r3, #0]
			delay();
 80002a4:	f7ff ffa0 	bl	80001e8 <delay>
		input_value = ((*pGPIOA_IDR >> GPIO_PIN_NUM_INPUT) & 0x1);
 80002a8:	e7dd      	b.n	8000266 <main+0x52>
 80002aa:	bf00      	nop
 80002ac:	40023830 	.word	0x40023830
 80002b0:	40020000 	.word	0x40020000
 80002b4:	40020010 	.word	0x40020010
 80002b8:	40020c00 	.word	0x40020c00
 80002bc:	40020c14 	.word	0x40020c14

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 f811 	bl	8000314 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff8f 	bl	8000214 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	0800037c 	.word	0x0800037c
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <__libc_init_array>:
 8000314:	b570      	push	{r4, r5, r6, lr}
 8000316:	4d0d      	ldr	r5, [pc, #52]	; (800034c <__libc_init_array+0x38>)
 8000318:	4c0d      	ldr	r4, [pc, #52]	; (8000350 <__libc_init_array+0x3c>)
 800031a:	1b64      	subs	r4, r4, r5
 800031c:	10a4      	asrs	r4, r4, #2
 800031e:	2600      	movs	r6, #0
 8000320:	42a6      	cmp	r6, r4
 8000322:	d109      	bne.n	8000338 <__libc_init_array+0x24>
 8000324:	4d0b      	ldr	r5, [pc, #44]	; (8000354 <__libc_init_array+0x40>)
 8000326:	4c0c      	ldr	r4, [pc, #48]	; (8000358 <__libc_init_array+0x44>)
 8000328:	f000 f818 	bl	800035c <_init>
 800032c:	1b64      	subs	r4, r4, r5
 800032e:	10a4      	asrs	r4, r4, #2
 8000330:	2600      	movs	r6, #0
 8000332:	42a6      	cmp	r6, r4
 8000334:	d105      	bne.n	8000342 <__libc_init_array+0x2e>
 8000336:	bd70      	pop	{r4, r5, r6, pc}
 8000338:	f855 3b04 	ldr.w	r3, [r5], #4
 800033c:	4798      	blx	r3
 800033e:	3601      	adds	r6, #1
 8000340:	e7ee      	b.n	8000320 <__libc_init_array+0xc>
 8000342:	f855 3b04 	ldr.w	r3, [r5], #4
 8000346:	4798      	blx	r3
 8000348:	3601      	adds	r6, #1
 800034a:	e7f2      	b.n	8000332 <__libc_init_array+0x1e>
 800034c:	08000374 	.word	0x08000374
 8000350:	08000374 	.word	0x08000374
 8000354:	08000374 	.word	0x08000374
 8000358:	08000378 	.word	0x08000378

0800035c <_init>:
 800035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035e:	bf00      	nop
 8000360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000362:	bc08      	pop	{r3}
 8000364:	469e      	mov	lr, r3
 8000366:	4770      	bx	lr

08000368 <_fini>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr
