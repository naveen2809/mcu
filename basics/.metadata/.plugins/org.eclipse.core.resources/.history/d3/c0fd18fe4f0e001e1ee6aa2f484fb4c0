/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#define AHB1_ENR_ADDR					(0x40023800UL + 0x30UL)
#define GPIOD_MODER_ADDR				0x40020C00UL
#define GPIOD_ODR_ADDR					0x40020C14UL
#define GPIO_PORT						3
#define GPIO_PIN_NUM					RED_LED
#define SLEEP_COUNT						500000
#define	GREEN_LED						12
#define	ORANGE_LED						13
#define	RED_LED							14
#define	BLUE_LED						15


int main(void)
{
	uint32_t *pAHB1ENR = (uint32_t *) AHB1_ENR_ADDR;
	uint32_t *pGPIOD_MODER = (uint32_t *) GPIOD_MODER_ADDR;
    uint32_t *pGPIOD_ODR = (uint32_t *) GPIOD_ODR_ADDR;
    uint32_t j=0;

	//1. Enable peripheral clock for GPIOD peripheral by writing to AHB1ENR

	*pAHB1ENR |= (1 << GPIO_PORT);

	//2. Set of the mode of GPIOD, Pin 12 as output by writing to GPIOD_MODER

    *pGPIOD_MODER |= (1 << 2*GPIO_PIN_NUM);

	for(;;)
	{
		//3. Make LED COnnected Pin of GPIOD as HIGH by writing to GPIOD_ODR
		*pGPIOD_ODR |= (1 << GPIO_PIN_NUM);
		for(j=0;j<SLEEP_COUNT;j++);

		//4. Make LED Connected Pin of GPIOD as LOW by writing to GPIOD_ODR
		*pGPIOD_ODR &= ~(1 << GPIO_PIN_NUM);
		for(j=0;j<SLEEP_COUNT;j++);
	}
}
