/*
 * basic_timer_test.c
 *
 *  Created on: 29-Aug-2023
 *      Author: naveen
 */

#include <string.h>
#include "stm32f4xx.h"
#include "gpio_driver.h"
#include "general_purpose_timer.h"
#include "common_utilities.h"

#define GPIO_COL_1		GPIO_PIN_0
#define GPIO_COL_2		GPIO_PIN_1
#define GPIO_COL_3		GPIO_PIN_2
#define GPIO_COL_4		GPIO_PIN_3

#define GPIO_ROW_1		GPIO_PIN_0
#define GPIO_ROW_2		GPIO_PIN_1
#define GPIO_ROW_3		GPIO_PIN_2
#define GPIO_ROW_4		GPIO_PIN_3

#define GPIO_PORT_COL	GPIOA
#define GPIO_PORT_ROW	GPIOC

uint8_t gpio_col[] = {GPIO_COL_1, GPIO_COL_2, GPIO_COL_3, GPIO_COL_4};
uint8_t gpio_row[] = {GPIO_ROW_1, GPIO_ROW_2, GPIO_ROW_3, GPIO_ROW_4};

uint8_t char_matrix[4][4] = {
							{'*','0','#','D'},
							{'7','8','9','C'},
							{'4','5','6','B'},
							{'1','2','3','A'}
						};

uint8_t char_buffer[80];
uint8_t char_count = 0;

uint8_t getchar_keypad(void);

int main(void)
{

	uint8_t c;

	//Configuring the timer
	configure_delay_timer();

	//GPIO Configuration for Columns
	EnablePeriClk(GPIO_PORT_COL);
	GPIOSetMode(GPIO_PORT_COL, GPIO_COL_1, GPIO_MODE_OUTPUT);
	GPIOSetMode(GPIO_PORT_COL, GPIO_COL_2, GPIO_MODE_OUTPUT);
	GPIOSetMode(GPIO_PORT_COL, GPIO_COL_3, GPIO_MODE_OUTPUT);
	GPIOSetMode(GPIO_PORT_COL, GPIO_COL_4, GPIO_MODE_OUTPUT);

	GPIOWritePin(GPIO_PORT_COL, GPIO_COL_1,GPIO_HIGH);
	GPIOWritePin(GPIO_PORT_COL, GPIO_COL_2,GPIO_HIGH);
	GPIOWritePin(GPIO_PORT_COL, GPIO_COL_3,GPIO_HIGH);
	GPIOWritePin(GPIO_PORT_COL, GPIO_COL_4,GPIO_HIGH);

	//GPIO Configuration for Rows
	EnablePeriClk(GPIO_PORT_ROW);
	GPIOSetMode(GPIO_PORT_ROW, GPIO_ROW_1, GPIO_MODE_INPUT);
	GPIOSetMode(GPIO_PORT_ROW, GPIO_ROW_2, GPIO_MODE_INPUT);
	GPIOSetMode(GPIO_PORT_ROW, GPIO_ROW_3, GPIO_MODE_INPUT);
	GPIOSetMode(GPIO_PORT_ROW, GPIO_ROW_4, GPIO_MODE_INPUT);

	GPIOSetPullUpDownConfig(GPIO_PORT_ROW, GPIO_ROW_1,GPIO_PULL_UP);
	GPIOSetPullUpDownConfig(GPIO_PORT_ROW, GPIO_ROW_2,GPIO_PULL_UP);
	GPIOSetPullUpDownConfig(GPIO_PORT_ROW, GPIO_ROW_3,GPIO_PULL_UP);
	GPIOSetPullUpDownConfig(GPIO_PORT_ROW, GPIO_ROW_4,GPIO_PULL_UP);

	c = getchar_keypad();

	while(1)
	{
		c = getchar_keypad();
		char_buffer[char_count] = c;
		char_count++;
	}

	return 0;
}

uint8_t getchar_keypad(void)
{
	uint8_t row,col;
	uint8_t c;

	while(1)
	{
		for(row=0;row<4;row++)
		{
			for(col=0;col<4;col++)
			{
				GPIOWritePin(GPIO_PORT_COL, gpio_col[col],GPIO_LOW);
				if(GPIOReadPin(GPIO_PORT_ROW, gpio_row[row]) == GPIO_LOW)
				{
					c = char_matrix[row][col];
					GPIOWritePin(GPIO_PORT_COL, gpio_col[col],GPIO_HIGH);
					return c;;
				}
				GPIOWritePin(GPIO_PORT_COL, gpio_col[col],GPIO_HIGH);
			}
		}
	}
}
