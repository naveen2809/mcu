/*
 * flash_driver.c
 *
 *  Created on: 21-Mar-2024
 *      Author: naveen
 */

#include "flash_driver.h"
#include <stdint.h>

void flash_sector_erase(uint32_t sector_num)
{

}

void flash_mass_erase(void)
{

}

void flash_unlock(void)
{
	struct FLASH_RegDef_t *FLASH = (struct FLASH_RegDef_t *)FLASH_BASE_ADDR;

	FLASH->FLASH_KEYR = 0x45670123;
	FLASH->FLASH_KEYR |= (0xCDEF89AB << 16);

	return;
}

void flash_lock(void)
{
	struct FLASH_RegDef_t *FLASH = (struct FLASH_RegDef_t *)FLASH_BASE_ADDR;

	FLASH->FLASH_CR |= (1 << FLASH_CR_LOCK);

	return;
}

void flash_read(uint8_t *RxBuf,uint8_t *fptr,uint32_t len)
{
	uint32_t i;

	for(i=0;i<len;i++)
	{
		*RxBuf++ = *fptr++;
	}

	return;
}

void flash_write(uint8_t *TxBuf,uint8_t *fptr,uint32_t len)
{
	struct FLASH_RegDef_t *FLASH = (struct FLASH_RegDef_t *)FLASH_BASE_ADDR;
	uint32_t i;

	//Unlock the FLASH Memory
	flash_unlock();

	//Set the FLASH PSIZE to one byte
	FLASH->FLASH_CR &= ~(0x3 << FLASH_CR_PSIZE);

	for(i=0;i<len;i++)
	{
		*fptr++ = *RxBuf++;
	}

	//Lock the FLASH Memory
	flash_lock();

	return;
}
