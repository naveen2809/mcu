/*
 * i2c_lcd_driver.c
 *
 *  Created on: 13-Dec-2023
 *      Author: naveen
 */


#include "stm32f4xx.h"
#include "i2c_driver.h"
#include "gpio_driver.h"
#include <stdint.h>
#include <string.h>
#include "common_utilities.h"

#define I2C_CONFIG_PERI_FREQ			0x10
#define I2C_CONFIG_CCR_VALUE			0x50
#define TRISE_VALUE						0x11
#define I2C1_SDA						GPIO_PIN_7
#define I2C1_SCL						GPIO_PIN_6

struct I2C_Config_t I2C_Config;
uint8_t SlaveAddress = 0x3E;

void i2c_lcd_init(void);
void i2c_lcd_send_char(uint8_t c);
void i2c_lcd_send_message(char *message,uint8_t length);

int main(void)
{
	uint8_t ch = 0x20;

	char message[] = "Hello World!";

	//Configure the Timer
	configure_delay_timer();

	//GPIO Pin Configuration for I2C
	EnablePeriClk(GPIOB);
	GPIOSetMode(GPIOB,I2C1_SDA,GPIO_MODE_ALTFN);
	GPIOSetMode(GPIOB,I2C1_SCL,GPIO_MODE_ALTFN);
	GPIOSetAltFn(GPIOB,I2C1_SDA,GPIO_ALTFN_4);
	GPIOSetAltFn(GPIOB,I2C1_SCL,GPIO_ALTFN_4);
	GPIOSetOutputType(GPIOB,I2C1_SDA,GPIO_OPTYPE_OD);
	GPIOSetOutputType(GPIOB,I2C1_SCL,GPIO_OPTYPE_OD);
	GPIOSetOutputSpeed(GPIOB,I2C1_SDA,GPIO_OPSPEED_HIGH);
	GPIOSetOutputSpeed(GPIOB,I2C1_SCL,GPIO_OPSPEED_HIGH);
	//GPIOSetPullUpDownConfig(GPIOB,I2C1_SDA,GPIO_PULL_UP);
	//GPIOSetPullUpDownConfig(GPIOB,I2C1_SCL,GPIO_PULL_UP);

	//I2C Port Configuration
	memset(&I2C_Config,0,sizeof(I2C_Config));
	I2C_Config.I2C_PeriFreq = I2C_CONFIG_PERI_FREQ;
	I2C_Config.I2C_SpeedMode = I2C_MODE_SM;
	I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_0;
	I2C_Config.I2C_CCRValue = I2C_CONFIG_CCR_VALUE;
	I2C_Config.I2C_AckControl = I2C_ACK_ENABLE;

	EnablePeriClk(I2C1);

	I2CPeriConfig(I2C1,&I2C_Config);
	I2CConfigureTrise(I2C1,TRISE_VALUE);

	I2CEnable(I2C1);

	i2c_lcd_init();

	i2c_lcd_send_message(message,strlen(message));
	delay_us(5000);
	i2c_lcd_send_char(ch);
	delay_us(5000);
	i2c_lcd_send_char(ch);
	delay_us(5000);
	i2c_lcd_send_char(ch);
	delay_us(5000);
	i2c_lcd_send_char(ch);
	delay_us(5000);
	i2c_lcd_send_message(message,strlen(message));

	while(1)
	{

	}

	I2CDisable(I2C1);
	DisablePeriClk(I2C1);

	return 0;
}

void i2c_lcd_init(void)
{
	uint8_t control_message[2];

	control_message[0] = 0x00;  //Control Word

	//Initial Delay
	delay_us(200000);

	//1. Function Set (No. of Display Lines and Pixel Size Settings (2 lines, 5x8 pixels)
	control_message[1] = 0x28;
	I2CMasterSendData(I2C1,control_message,2, SlaveAddress);
	delay_us(50);

	//2. Display On/Off, Cursor On/Off and Cursor Blink Settings
	control_message[1] = 0x0F;
	I2CMasterSendData(I2C1,control_message,2, SlaveAddress);
	delay_us(50);

	//3. Display Clear
	control_message[1] = 0x01;
	I2CMasterSendData(I2C1,control_message,2, SlaveAddress);
	delay_us(3000);

	//4. Return Home
	control_message[1] = 0x02;
	I2CMasterSendData(I2C1,control_message,2, SlaveAddress);
	delay_us(3000);

	//5. Entry Mode Settings
	control_message[1] = 0x06;
	I2CMasterSendData(I2C1,control_message,2, SlaveAddress);
	delay_us(50);
}

void i2c_lcd_send_char(uint8_t c)
{
	uint8_t data_message[2];

	data_message[0] = 0x40;
	data_message[1] = c;

	I2CMasterSendData(I2C1,data_message,2, SlaveAddress);
	delay_us(50);
}

void i2c_lcd_send_message(char *message,uint8_t length)
{
	int i;

	for(i=0; i<length; i++)
	{
		i2c_lcd_send_char((uint8_t)message[i]);
	}
}
