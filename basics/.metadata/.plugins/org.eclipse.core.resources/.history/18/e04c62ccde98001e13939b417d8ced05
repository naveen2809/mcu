/*
 * seven_segment_display.c
 * Common Anode Seven Segment Display Driver
 * Reference: https://www.electronicsforu.com/resources/7-segment-display-pinout-understanding
 *  Created on: 12-Dec-2023
 *      Author: naveen
 */

#include "timer_driver.h"
#include "gpio_driver.h"

#define GPIO_1				GPIO_PIN_0

void delay_us(uint16_t delay);

struct Basic_Timer_Handle_t TIM6_Handle;
struct General_Purpose_Timer_Handle_t TIM2_Handle;

int main(void)
{

	//GPIO Configuration for Seven Segment LEDs
	EnablePeriClk(GPIOA);
	GPIOSetMode(GPIOA, GPIO_1, GPIO_MODE_OUTPUT);

	//Initialize Seven Segment LED GPIOs to HIGH (Common Anode)
	GPIOWritePin(GPIOA, GPIO_1,GPIO_LOW);

	//TIM6 Configuration
	TIM6_Handle.pBasic_Timer = (struct Basic_Timer_RegDef_t *)TIM6;
	TIM6_Handle.Basic_Timer_Config.Timer_PreScalerValue = 0x0;
	TIM6_Handle.Basic_Timer_Config.Timer_AutoReloadValue = 0xffff;
	TIM6_Handle.Basic_Timer_Config.Timer_UpdateInterruptConfig = TIMER_UPDATE_INTERRUPT_DISABLE;

	EnablePeriClk(TIM6);
	Basic_Timer_Init(&TIM6_Handle);
	Basic_Timer_PeripheralEnable(&TIM6_Handle);


	//TIM2 Configuration
	TIM2_Handle.pGeneral_Purpose_Timer = (struct General_Purpose_Timer_RegDef_t *) TIM2;
	memset(&TIM2_Handle.General_Purpose_Timer_Config,0,sizeof(TIM2_Handle.General_Purpose_Timer_Config));
	TIM2_Handle.General_Purpose_Timer_Config.Timer_PreScalerValue = 0x0;
	TIM2_Handle.General_Purpose_Timer_Config.Timer_AutoReloadValue = 0xFFFFFFFF;


	GPIOTogglePin(GPIOA, GPIO_1);
	delay_us(2000);
	GPIOTogglePin(GPIOA, GPIO_1);

	while(1);

	return 0;
}

void delay_us(uint16_t delay)
{
	TIM6_Handle.pBasic_Timer->TIMx_CNT = 0;
	while(TIM6_Handle.pBasic_Timer->TIMx_CNT < 16*delay);
}
