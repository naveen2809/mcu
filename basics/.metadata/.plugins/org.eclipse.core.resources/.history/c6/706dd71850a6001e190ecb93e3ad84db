/*
 * at45dbxx_flash_memory_driver.h
 * Driver code for the AT45DB041E SPI Flash Memory Module
 * Reference: https://www.waveshare.com/w/upload/b/b4/AT45DB041E.pdf
 *  Created on: 29-Dec-2023
 *      Author: naveen
 */

#ifndef INC_AT45DBXX_FLASH_MEMORY_DRIVER_H_
#define INC_AT45DBXX_FLASH_MEMORY_DRIVER_H_

#include <stdint.h>
#include "stm32f4xx.h"
#include "gpio_driver.h"

#define FLASH_PORT		GPIOA
#define SS_PIN			4

#define AT45DBXX_SUCCESS				0
#define AT45DBXX_FAIL					1
#define AT45DBXX_SRAM_BUFFER_1			0
#define AT45DBXX_SRAM_BUFFER_2			1

void at45dbxx_continuous_array_read(void);
uint8_t at45dbxx_page_read(uint8_t *MemAddress, uint8_t *RxBuf, uint16_t Len);
uint8_t at45dbxx_buffer_read(uint8_t Buffer, uint8_t *MemAddress, uint8_t *RxBuf, uint32_t Len);
uint8_t at45dbxx_buffer_write(uint8_t Buffer, uint8_t *MemAddress, uint8_t *TxBuf, uint32_t Len);
uint8_t at45dbxx_buffer_to_page_program_with_erase(uint8_t Buffer, uint8_t *PageAddress);
uint8_t at45dbxx_buffer_to_page_program_without_erase(uint8_t Buffer, uint8_t *PageAddress);
uint8_t at45dbxx_page_program_through_buffer_with_erase(uint8_t Buffer, uint8_t *MemAddress, uint8_t *TxBuf, uint32_t Len);
uint8_t at45dbxx_byte_page_program_through_buffer1_without_erase(uint8_t *MemAddress, uint8_t *TxBuf, uint32_t Len);
uint8_t at45dbxx_read_modify_write(uint8_t Buffer, uint8_t *MemAddress, uint8_t *TxBuf, uint32_t Len);
uint8_t at45dbxx_page_erase(uint8_t *PageAddress);
uint8_t at45dbxx_block_erase(uint8_t *PageAddress);
uint8_t at45dbxx_sector_erase(uint8_t *PageAddress);
uint8_t at45dbxx_chip_erase(void);
uint8_t at45dbxx_program_erase_suspend(void);
uint8_t at45dbxx_program_erase_resume(void);
uint8_t enable_sector_protection(void);
uint8_t disable_sector_protection(void);


#endif /* INC_AT45DBXX_FLASH_MEMORY_DRIVER_H_ */
